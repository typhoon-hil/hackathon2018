version = 4.2

//
// Saved by sw version: 2019.2
// Save timestamp: 22-Jul-2019 @ 03:48:45 PM
//

model "hackathon_house" {
    configuration {
        hil_device = "HIL402"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component Subsystem PV_panel {
            layout = dynamic
            component gen_2D_lookup_table PV {
                ext_mode = "Linear"
                in_vec_x = "[-25,-10,0,25,30,40]"
                in_vec_y = "[0, 200, 400, 500, 600, 700, 800, 900, 1000,1100]"
                out_vec_f_xy = "[[0,46,102,131,160,188,217,246,275,303],[0,45,98,125,152,179,206,233,260,288],[0,44,95,121,147,173,199,225,252,278],[0,42,87,111,134,158,181,205,229,253],[0.3,41,86,109,132,155,178,201,224,247],[1,40,82,104,126,148,170,193,215,237]]"
            }
            [
                position = 8248, 8192
            ]

            component gen_gain Gain1 {
                gain = "-10"
            }
            [
                position = 8336, 8192
            ]

            component src_scada_input ON_OFF_HEMS {
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 8256, 8072
            ]

            component gen_product Product1 {
            }
            [
                position = 8480, 8184
            ]

            port P {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8624, 8184
            ]

            port I {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8064, 8216
            ]

            port T {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8064, 8144
            ]

            connect PV.value Gain1.in as Connection3
            connect I PV.addr_y as Connection5
            connect T PV.addr_x as Connection6
            connect Product1.in1 Gain1.out as Connection7
            connect Product1.out P as Connection8
            connect ON_OFF_HEMS.out Product1.in as Connection9
            [
                breakpoints = 8400, 8072; 8400, 8176
            ]

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images\solar.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 6936
            size = 88, 88
        ]

        component gen_probe P_PV {
        }
        [
            position = 7024, 6840
            rotation = left
        ]

        component gen_probe Temperature {
        }
        [
            position = 6344, 7000
            rotation = left
        ]

        component Subsystem "Global Irradiation" {
            layout = dynamic
            component lut_1d type_1 {
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "irradiation_day_1"
            }
            [
                position = 8080, 8272
            ]

            component gen_product Product2 {
            }
            [
                position = 8432, 8360
            ]

            component lut_1d type_2 {
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "irradiation_day_2"
            }
            [
                position = 8080, 8368
            ]

            component sys_mp_signal_switch "Multiport signal switch1" {
            }
            [
                position = 8672, 8312
            ]

            component lut_1d irradiation_pu {
                in_vec_x = "np.arange(0,365)"
                out_vec_f_x = "irradiation_pu"
            }
            [
                position = 8096, 8048
            ]

            component gen_product Product1 {
            }
            [
                position = 8416, 8264
            ]

            component gen_c_function counter_15_minutes {
                global_variables = "int state;int counter;"
                in_terminal_labels = "[]"
                in_terminal_properties = ""
                init_fnc = "/*Begin code section*/
state = 0;
counter = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(counter==14){
    counter = 0;
    state +=1;
}
else {
    counter += 1;
}

if(state==96){
    state=0;
}
/*End code section*/"
            }
            [
                position = 7880, 8120
                size = 48, 48
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7784, 8080
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7664, 8080
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7784, 8136
            ]

            component gen_c_function mod2 {
                in_terminal_dimensions = "7"
                in_terminal_dimensions_str = "in 7"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = (in[1] % 2)+1;
/*End code section*/"
            }
            [
                position = 7744, 7824
                size = 48, 64
            ]

            component "core/Edge Detection" "Edge Detection2" {
            }
            [
                position = 7912, 7856
                size = 32, 32
            ]

            component gen_c_function "sample hold" {
                global_variables = "real state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "in inherit;trigger inherit"
                in_terminal_labels = "[(\'in\', True), (\'trigger\', True)]"
                in_terminal_properties = "int in;int trigger;"
                init_fnc = "/*Begin code section*/
state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(trigger==1){
    state = in;
}
/*End code section*/"
            }
            [
                position = 8032, 7840
                size = 72, 64
            ]

            port random {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7592, 7824
            ]

            port irradiation {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8848, 8312
            ]

            port t {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7584, 8080
            ]

            junction Junction3 sp
            [
                position = 8352, 8256
            ]

            junction Junction1 sp
            [
                position = 7968, 8272
            ]

            junction Junction4 sp
            [
                position = 7808, 8048
            ]

            comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">each increment </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">represents 15 minutes</p></body></html> ENDCOMMENT 
            [
                position = 7976, 8176
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">days</p></body></html> ENDCOMMENT 
            [
                position = 7904, 8016
            ]

            comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LUT change timed with day change</p></body></html> ENDCOMMENT 
            [
                position = 8728, 7808
            ]

            connect type_2.addr Junction1 as Connection6
            connect Product1.in1 type_1.value as Connection34
            [
                breakpoints = 8208, 8272
            ]
            connect Product1.in Junction3 as Connection18
            connect type_2.value Product2.in1 as Connection35
            [
                breakpoints = 8208, 8368
            ]
            connect Junction3 Product2.in as Connection17
            [
                breakpoints = 8352, 8352
            ]
            connect "Multiport signal switch1.in" Product1.out as Connection39
            connect "Multiport signal switch1.out" irradiation as Connection43
            connect "Multiport signal switch1.in1" Product2.out as Connection40
            connect Junction1 type_1.addr as Connection5
            [
                breakpoints = 7968, 8272
            ]
            connect Termination1.in "Bus Split1.out1" as Connection52
            connect t "Bus Split1.in" as Connection55
            connect Termination2.in "Bus Split1.out2" as Connection59
            connect counter_15_minutes.out Junction1 as Connection60
            [
                breakpoints = 7968, 8144
            ]
            connect irradiation_pu.value Junction3 as Connection61
            [
                breakpoints = 8352, 8048; 8352, 8144
            ]
            connect "sample hold.trigger" "Edge Detection2.Out1" as Connection346
            connect mod2.out "sample hold.in" as Connection345
            connect random mod2.in as Connection353
            connect irradiation_pu.addr Junction4 as Connection354
            connect Junction4 "Bus Split1.out" as Connection355
            connect "Edge Detection2.In1" Junction4 as Connection356
            connect "sample hold.out" "Multiport signal switch1.ctrl" as Connection357
            [
                breakpoints = 8592, 7840; 8592, 8296
            ]
        }
        [
            position = 6264, 7160
            size = 88, 88
        ]

        component Subsystem "Global Temperature" {
            layout = dynamic
            component lut_1d temperature_per_year {
                in_vec_x = "np.arange(0,365)"
                out_vec_f_x = "temperature_through_year"
            }
            [
                position = 8096, 8048
            ]

            component gen_product Product1 {
            }
            [
                position = 8768, 8304
            ]

            component sys_mp_signal_switch "Multiport signal switch1" {
                number_of_input_terminals = "3"
            }
            [
                position = 8600, 8312
            ]

            component lut_1d type_1 {
                in_vec_x = "np.arange(0, 24)"
                out_vec_f_x = "day_1_temp_pu"
            }
            [
                position = 8080, 8272
            ]

            component lut_1d type_2 {
                in_vec_x = "np.arange(0,24)"
                out_vec_f_x = "day_2_temp_pu"
            }
            [
                position = 8080, 8368
            ]

            component lut_1d type_3 {
                in_vec_x = "np.arange(0,24)"
                out_vec_f_x = "day_3_temp_pu"
            }
            [
                position = 8080, 8456
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7656, 8064
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7752, 8080
            ]

            component gen_c_function "sample hold" {
                global_variables = "real state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "in inherit;trigger inherit"
                in_terminal_labels = "[(\'in\', True), (\'trigger\', True)]"
                in_terminal_properties = "int in;int trigger;"
                init_fnc = "/*Begin code section*/
state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(trigger==1){
    state = in;
}
/*End code section*/"
            }
            [
                position = 8008, 7888
                size = 72, 64
            ]

            component "core/Edge Detection" "Edge Detection2" {
            }
            [
                position = 7888, 7904
                size = 32, 32
            ]

            component gen_c_function mod2 {
                in_terminal_dimensions = "7"
                in_terminal_dimensions_str = "in 7"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = (in[2] % 2)+1;
/*End code section*/"
            }
            [
                position = 7720, 7872
                size = 48, 64
            ]

            port temperature {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8896, 8304
            ]

            port t {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7576, 8064
            ]

            port random {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7568, 7872
            ]

            junction Junction6 sp
            [
                position = 7968, 8368
            ]

            junction Junction1 sp
            [
                position = 7968, 8272
            ]

            junction Junction7 sp
            [
                position = 7776, 8048
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">days</p></body></html> ENDCOMMENT 
            [
                position = 7840, 8016
            ]

            comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">hours</p></body></html> ENDCOMMENT 
            [
                position = 7840, 8072
            ]

            connect "Multiport signal switch1.in" type_1.value as Connection51
            connect Junction6 Junction1 as Connection60
            connect "Multiport signal switch1.in1" type_2.value as Connection52
            connect type_3.addr Junction6 as Connection61
            connect Junction1 type_1.addr as Connection5
            [
                breakpoints = 7968, 8272
            ]
            connect Product1.in1 "Multiport signal switch1.out" as Connection46
            connect type_3.value "Multiport signal switch1.in2" as Connection62
            [
                breakpoints = 8128, 8456; 8128, 8336
            ]
            connect temperature Product1.out as Connection50
            connect type_2.addr Junction6 as Connection59
            connect Termination1.in "Bus Split1.out2" as Connection68
            connect "Bus Split1.in" t as Connection77
            connect "Bus Split1.out1" Junction1 as Connection79
            [
                breakpoints = 7968, 8168; 7968, 8272; 7968, 8272
            ]
            connect temperature_per_year.value Product1.in as Connection80
            [
                breakpoints = 8352, 8048; 8352, 8048; 8688, 8048
            ]
            connect "sample hold.trigger" "Edge Detection2.Out1" as Connection346
            connect random mod2.in as Connection353
            connect mod2.out "sample hold.in" as Connection345
            connect "Bus Split1.out" Junction7 as Connection354
            connect Junction7 temperature_per_year.addr as Connection355
            [
                breakpoints = 8016, 8048
            ]
            connect "Edge Detection2.In1" Junction7 as Connection356
            connect "sample hold.out" "Multiport signal switch1.ctrl" as Connection357
        }
        [
            position = 6264, 7040
            size = 88, 88
        ]

        component gen_probe Irradiation {
        }
        [
            position = 6344, 7120
            rotation = left
        ]

        component Subsystem "Global Time" {
            layout = dynamic
            component gen_rel_op equal {
            }
            [
                position = 8056, 8160
                scale = -1, 1
            ]

            component "core/Counter" Counter2 {
                ext_reset = "rising"
            }
            [
                position = 8072, 8272
                size = 48, 48
            ]

            component gen_probe p_minutes {
            }
            [
                position = 8424, 8200
                rotation = left
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
            }
            [
                position = 7960, 8264
            ]

            component gen_probe p_days {
            }
            [
                position = 8264, 8200
                rotation = left
            ]

            component gen_probe p_hours {
            }
            [
                position = 8344, 8200
                rotation = left
            ]

            component Subsystem s2hms1 {
                layout = dynamic
                component gen_c_function "C function2" {
                    global_variables = "int count;int hour_var;int start_count;"
                    in_terminal_dimensions = "1"
                    in_terminal_dimensions_str = "in 1"
                    in_terminal_labels = "[(\'in\', False)]"
                    in_terminal_properties = "int in;"
                    init_fnc = "/*Begin code section*/
count = 0;
hour_var = 0;
start_count = 1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1;1;1"
                    out_terminal_dimensions_str = "hour 1;min 1;day 1"
                    out_terminal_labels = "[(\'hour\', True), (\'min\', True), (\'day\', True)]"
                    out_terminal_properties = "int hour;int min;int day;"
                    output_fnc = "/*Begin code section*/
day = count;
hour = in/60;
min = in - hour*60;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
hour_var = in/60;

if(hour_var==23 && start_count==1){
    count +=1;
    start_count = 0;
}

if(hour_var==0){
    start_count = 1;
}

if(count==365){
    count=0;
}
/*End code section*/"
                }
                [
                    position = 8152, 8192
                    size = 48, 64
                ]

                port In {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8080, 8192
                ]

                port hours {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8304, 8160
                ]

                port minutes {
                    position = right:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8304, 8224
                ]

                port days {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8304, 8096
                ]

                connect "C function2.in" In as Connection38
                connect hours "C function2.hour" as Connection39
                connect minutes "C function2.min" as Connection40
                connect days "C function2.day" as Connection41
                [
                    breakpoints = 8224, 8096; 8224, 8208
                ]
            }
            [
                position = 8192, 8272
                size = 48, 64
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "60*24-1"
            }
            [
                position = 8056, 8096
            ]

            component gen_bus_join "Bus Join1" {
                inputs = "3"
            }
            [
                position = 8536, 8272
            ]

            port time {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8664, 8272
            ]

            junction Junction25 sp
            [
                position = 8120, 8272
            ]

            junction Junction26 sp
            [
                position = 8424, 8288
            ]

            junction Junction27 sp
            [
                position = 8344, 8272
            ]

            junction Junction28 sp
            [
                position = 8264, 8256
            ]

            connect equal.out Counter2.reset as Connection181
            [
                breakpoints = 8008, 8160; 8008, 8272
            ]
            connect Constant1.out equal.in as Connection177
            [
                breakpoints = 8120, 8096; 8120, 8144
            ]
            connect Junction25 Counter2.out as Connection179
            connect Constant3.out Counter2.en as Connection169
            connect equal.in1 Junction25 as Connection180
            connect s2hms1.In Junction25 as Connection178
            connect s2hms1.minutes Junction26 as Connection238
            connect Junction26 p_minutes.in as Connection239
            [
                breakpoints = 8424, 8288
            ]
            connect "Bus Join1.in2" Junction26 as Connection240
            connect p_hours.in Junction27 as Connection241
            connect Junction27 s2hms1.hours as Connection242
            [
                breakpoints = 8344, 8272
            ]
            connect "Bus Join1.in1" Junction27 as Connection243
            connect s2hms1.days Junction28 as Connection244
            connect Junction28 p_days.in as Connection245
            [
                breakpoints = 8264, 8256
            ]
            connect "Bus Join1.in" Junction28 as Connection246
            connect time "Bus Join1.out" as Connection247
        }
        [
            position = 6264, 6920
            size = 88, 88
        ]

        component gen_probe P_washing_machine {
        }
        [
            position = 7448, 6840
            rotation = left
        ]

        component Subsystem "Dish Washer" {
            layout = dynamic
            component Subsystem "STOP TIME" {
                layout = dynamic
                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8200, 8224
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8200, 8160
                ]

                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8376, 8192
                ]

                connect h_set.out "Bus Join.in" as Connection9
                connect Time "Bus Join.out" as Connection8
                [
                    breakpoints = 8336, 8192
                ]
                connect "Bus Join.in1" m_set.out as Connection10
                [
                    breakpoints = 8248, 8200; 8248, 8224
                ]

                h = "stop_hours"
                m = "stop_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "23"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8568, 8688
                size = 48, 64
            ]

            component Subsystem t_cmp_6 {
                layout = dynamic
                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect Sum1.out cmp.in as Connection41
                [
                    breakpoints = 8280, 8152; 8280, 8208; 8296, 8208
                ]
                connect Junction1 Q as Connection27
                connect "Bus Split1.in" T_1 as Connection25
                connect "Logical operator1.in" Junction1 as Connection28
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect "Bus Split2.in" T_2 as Connection24
                connect cmp.out Junction1 as Connection26
                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
                connect h2m_2.out Sum2.in as Connection18
                connect h2m_1.out Sum1.in as Connection11
                connect cmp.in1 Sum2.out as Connection40
                [
                    breakpoints = 8280, 8224; 8280, 8288; 8280, 8288
                ]
                connect Qn "Logical operator1.out" as Connection29
            }
            [
                position = 8744, 8384
                size = 48, 72
            ]

            component gen_c_function "sample hold" {
                global_variables = "real state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "in inherit;trigger inherit"
                in_terminal_labels = "[(\'in\', True), (\'trigger\', True)]"
                in_terminal_properties = "int in;int trigger;"
                init_fnc = "/*Begin code section*/
state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(trigger==1){
    state = in;
}
/*End code section*/"
            }
            [
                position = 7944, 8512
                size = 72, 64
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 7856, 8824
            ]

            component src_scada_input LOADED {
                execution_rate = "Ts"
                format = "uint"
                max = "1"
                min = "0"
                signal_type = "uint"
                unit = ""
            }
            [
                position = 7640, 8240
            ]

            component "core/Counter" Counter1 {
                ext_reset = "rising"
            }
            [
                position = 8568, 8336
                size = 48, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "P"
            }
            [
                position = 8896, 8256
            ]

            component src_scada_input ON_OFF_HEMS {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7640, 8192
            ]

            component Subsystem t_cmp_5 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
                connect cmp.out Junction1 as Connection26
                connect "Bus Split1.in" T_1 as Connection25
                connect Junction1 Q as Connection27
                connect h2m_2.out Sum2.in as Connection18
                connect h2m_1.out Sum1.in as Connection11
                connect "Logical operator1.in" Junction1 as Connection28
                connect cmp.in1 Sum2.out as Connection22
                [
                    breakpoints = 8280, 8224; 8280, 8288
                ]
                connect Qn "Logical operator1.out" as Connection29
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect Sum1.out cmp.in as Connection21
                [
                    breakpoints = 8280, 8152; 8280, 8208
                ]
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect "Bus Split2.in" T_2 as Connection24
            }
            [
                position = 8840, 8800
                size = 48, 72
            ]

            component Subsystem DURATION {
                layout = dynamic
                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8200, 8224
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8200, 8160
                ]

                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8368, 8192
                ]

                connect h_set.out "Bus Join.in" as Connection8
                connect Time "Bus Join.out" as Connection10
                [
                    breakpoints = 8336, 8192
                ]
                connect m_set.out "Bus Join.in1" as Connection9

                h = "duration_hours"
                m = "duration_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "1"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8552, 8416
                size = 48, 64
            ]

            component gen_c_function mod11 {
                in_terminal_dimensions = "7"
                in_terminal_dimensions_str = "in 7"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = (in[6] % 11)+5;
/*End code section*/"
            }
            [
                position = 7736, 8496
                size = 48, 64
            ]

            component gen_c_function "C function1" {
                global_variables = "uint state;uint old_state;uint new_state;"
                in_terminal_dimensions = "inherit;inherit;inherit"
                in_terminal_dimensions_str = "on inherit;loaded inherit;duration_expired inherit"
                in_terminal_labels = "[(\'on\', True), (\'loaded\', True), (\'duration_expired\', True)]"
                in_terminal_properties = "uint on;uint loaded;uint duration_expired;"
                init_fnc = "/*Begin code section*/
state = 0;
old_state = 0;
new_state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit;inherit"
                out_terminal_dimensions_str = "working inherit;available inherit;state_out inherit"
                out_terminal_labels = "[(\'working\', True), (\'available\', True), (\'state_out\', True)]"
                out_terminal_properties = "uint working;uint available;uint state_out;"
                output_fnc = "/*Begin code section*/
switch(state) {
    case 0 :
        working = 0;
        available = 0;
        state_out = 0;
        break;
    case 1 :
        working = 0;
        available = 1;
        state_out = 1;
        break;
    case 2 :
        working = 1;
        available = 1;
        state_out = 2;
        break;
    case 3 :
        working = 0;
        available = 1;
        state_out = 3;
        break;
}
/*End code section*/"
                update_fnc = "/*Begin code section*/
old_state = state;

switch(old_state) {
    case 0 : // NOT AVAILABLE
        if(loaded==1)
            new_state = 1;
        else
            new_state = old_state;
        break;
    case 1 : // AVAILABLE
        if(on==1)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 2 : // WORING
        if(duration_expired==1)
            new_state = 0;
        else if (duration_expired == 0 && on==0)
            new_state = 3;
        else
            new_state = old_state;
        break;
    case 3 : // ON HOLD
        if(on==1)
            new_state = 2;
        else
            new_state = old_state;
        break;
}

state = new_state;
/*End code section*/"
            }
            [
                position = 8144, 8240
                size = 152, 64
            ]

            component Subsystem remaining_duration_calc {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 7408, 8040
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 7576, 8040
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 7504, 8008
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 7504, 7872
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7576, 7904
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 7704, 7968
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7408, 7904
                ]

                port minutes {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7832, 7968
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7328, 8040
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7328, 7904
                ]

                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 7456, 7896; 7456, 7872
                ]
                connect Sum3.in1 Sum2.out as Connection40
                [
                    breakpoints = 7640, 8040; 7640, 8040
                ]
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 7440, 8032; 7456, 8032; 7456, 8008
                ]
                connect h2m_1.out Sum1.in as Connection11
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 7440, 8048; 7536, 8048
                ]
                connect h2m_2.out Sum2.in as Connection18
                connect "Bus Split2.in" T_2 as Connection24
                connect minutes Sum3.out as Connection42
                connect "Bus Split1.in" T_1 as Connection25
                connect Sum3.in Sum1.out as Connection41
                [
                    breakpoints = 7656, 7960; 7640, 7960; 7640, 7904
                ]
            }
            [
                position = 8776, 8544
                size = 112, 56
            ]

            component Subsystem s2hm {
                layout = dynamic
                component gen_c_function "C function2" {
                    in_terminal_dimensions = "1"
                    in_terminal_dimensions_str = "in 1"
                    in_terminal_labels = "[(\'in\', False)]"
                    in_terminal_properties = "int in;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1;1"
                    out_terminal_dimensions_str = "hour 1;min 1"
                    out_terminal_labels = "[(\'hour\', True), (\'min\', True)]"
                    out_terminal_properties = "int hour;int min;"
                    output_fnc = "/*Begin code section*/
hour = in/60;
min = in - hour*60;
/*End code section*/"
                }
                [
                    position = 8152, 8192
                    size = 48, 64
                ]

                component gen_bus_join "Bus Join3" {
                }
                [
                    position = 8288, 8192
                ]

                port Out {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8360, 8192
                ]

                port In {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8080, 8192
                ]

                connect "C function2.in" In as Connection38
                connect "C function2.min" "Bus Join3.in1" as Connection40
                connect "C function2.hour" "Bus Join3.in" as Connection41
                connect "Bus Join3.out" Out as Connection37
            }
            [
                position = 8648, 8336
                size = 48, 48
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7728, 8240
            ]

            component gen_logic_op on2 {
            }
            [
                position = 8992, 8720
            ]

            component gen_rel_op "Relational operator1" {
            }
            [
                position = 8104, 8520
            ]

            component gen_digital_probe "work allowed" {
            }
            [
                position = 9128, 8720
            ]

            component gen_logic_op on3 {
                operator = "NOT"
            }
            [
                position = 8936, 8464
            ]

            component gen_probe remaining_duration {
            }
            [
                position = 8936, 8544
            ]

            component src_scada_input ON_USER {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7640, 8128
            ]

            component gen_logic_op on {
                operator = "OR"
            }
            [
                position = 7856, 8160
            ]

            component "core/Edge Detection" "Edge Detection2" {
            }
            [
                position = 7848, 8528
                size = 32, 32
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7760, 8816
            ]

            component gen_digital_probe available {
            }
            [
                position = 8256, 8160
                rotation = left
            ]

            component "core/Edge Detection" "Edge Detection3" {
                edge = "rising"
            }
            [
                position = 7984, 8240
                size = 32, 32
            ]

            component Subsystem "START TIME" {
                layout = dynamic
                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8208, 8224
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8208, 8160
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8376, 8192
                ]

                connect Time "Bus Join.out" as Connection8
                [
                    breakpoints = 8336, 8192
                ]
                connect m_set.out "Bus Join.in1" as Connection10
                connect h_set.out "Bus Join.in" as Connection9

                h = "start_hours"
                m = "start_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "21"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8568, 8816
                size = 48, 64
            ]

            component gen_product Product1 {
            }
            [
                position = 8976, 8224
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 8344, 8256
            ]

            component Subsystem t_cmp_4 {
                layout = dynamic
                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect cmp.in1 Sum2.out as Connection22
                [
                    breakpoints = 8280, 8224; 8280, 8288
                ]
                connect Junction1 Q as Connection27
                connect "Bus Split1.in" T_1 as Connection25
                connect Qn "Logical operator1.out" as Connection29
                connect Sum1.out cmp.in as Connection21
                [
                    breakpoints = 8280, 8152; 8280, 8208
                ]
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect h2m_1.out Sum1.in as Connection11
                connect h2m_2.out Sum2.in as Connection18
                connect "Logical operator1.in" Junction1 as Connection28
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect cmp.out Junction1 as Connection26
                connect "Bus Split2.in" T_2 as Connection24
                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
            }
            [
                position = 8840, 8672
                size = 48, 72
            ]

            component gen_digital_probe working {
            }
            [
                position = 8496, 8152
                rotation = left
            ]

            component gen_logic_op "Logical operator1" {
            }
            [
                position = 8424, 8216
            ]

            component gen_logic_op on4 {
                operator = "OR"
            }
            [
                position = 8464, 8432
                rotation = left
            ]

            component gen_logic_op on5 {
                operator = "NOT"
            }
            [
                position = 8456, 8536
                rotation = left
            ]

            port t {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7608, 8816
            ]

            port random {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7616, 8496
            ]

            port P {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9136, 8224
            ]

            tag Goto2 {
                value = "dur_ex"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9032, 8464
            ]

            tag From1 {
                value = "time"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8744, 8784
            ]

            tag Goto1 {
                value = "time"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7952, 8824
            ]

            tag From3 {
                value = "dur_ex"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7976, 8320
                size = 65, 20
            ]

            tag From2 {
                value = "time"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8728, 8656
            ]

            tag Goto3 {
                value = "allowed"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9120, 8648
            ]

            tag From4 {
                value = "allowed"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8328, 8192
            ]

            tag From5 {
                value = "allowed"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8400, 8600
            ]

            junction Junction34 sp
            [
                position = 8688, 8336
            ]

            junction Junction39 sp
            [
                position = 8872, 8544
            ]

            junction Junction40 sp
            [
                position = 8496, 8216
            ]

            junction Junction41 sp
            [
                position = 7808, 8816
            ]

            junction Junction35 sp
            [
                position = 8672, 8416
            ]

            junction Junction42 sp
            [
                position = 8496, 8216
            ]

            junction Junction43 sp
            [
                position = 9072, 8720
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Random logic for loading the washing machine</p></body></html> ENDCOMMENT 
            [
                position = 7608, 8432
            ]

            connect Junction39 remaining_duration_calc.minutes as Connection292
            connect on3.out Goto2 as Connection294
            connect "Bus Split1.out2" "Bus Join1.in1" as Connection223
            connect "Bus Join1.out" Goto1 as Connection220
            connect "Edge Detection2.In1" "Bus Split1.out" as Connection355
            connect s2hm.Out Junction34 as Connection243
            connect "STOP TIME.Time" t_cmp_4.T_2 as Connection188
            connect remaining_duration_calc.T_2 Junction35 as Connection257
            [
                breakpoints = 8672, 8480
            ]
            connect "Bus Join1.in" Junction41 as Connection358
            connect "Relational operator1.in" "sample hold.out" as Connection357
            connect Junction34 t_cmp_6.T_1 as Connection244
            connect on.in1 ON_OFF_HEMS.out as Connection297
            connect on3.in Junction39 as Connection293
            connect "Relational operator1.out" "Edge Detection3.In1" as Connection361
            [
                breakpoints = 8160, 8496; 7960, 8400; 7880, 8368
            ]
            connect random mod11.in as Connection353
            [
                breakpoints = 7664, 8496
            ]
            connect P Product1.out as Connection221
            connect t_cmp_5.T_2 "START TIME.Time" as Connection199
            connect Junction40 working.in as Connection307
            [
                breakpoints = 8496, 8224; 8496, 8224; 8496, 8224
            ]
            connect available.in "C function1.available" as Connection301
            connect Product1.in1 Constant1.out as Connection258
            connect Junction34 remaining_duration_calc.T_1 as Connection256
            [
                breakpoints = 8688, 8336; 8688, 8448
            ]
            connect on.in ON_USER.out as Connection298
            connect Junction35 t_cmp_6.T_2 as Connection247
            connect t_cmp_5.T_1 From1 as Connection198
            connect on.out "C function1.on" as Connection277
            [
                breakpoints = 7896, 8160; 8032, 8160; 8032, 8224
            ]
            connect t_cmp_5.Qn on2.in1 as Connection238
            [
                breakpoints = 8952, 8784
            ]
            connect From2 t_cmp_4.T_1 as Connection189
            connect "Relational operator1.in1" Junction41 as Connection360
            connect "sample hold.trigger" "Edge Detection2.Out1" as Connection356
            connect Termination1.in LOADED.out as Connection310
            connect "sample hold.in" mod11.out as Connection354
            connect remaining_duration.in Junction39 as Connection291
            connect Termination2.in "C function1.state_out" as Connection299
            connect Product1.in Junction40 as Connection308
            connect Junction41 "Bus Split1.out1" as Connection359
            connect DURATION.Time Junction35 as Connection246
            connect t "Bus Split1.in" as Connection55
            connect t_cmp_4.Q on2.in as Connection237
            connect "C function1.loaded" "Edge Detection3.Out1" as Connection351
            connect From3 "C function1.duration_expired" as Connection290
            connect s2hm.In Counter1.out as Connection33
            connect "Logical operator1.in1" "C function1.working" as Connection364
            connect Counter1.en Junction42 as Connection365
            connect Junction42 Junction40 as Connection366
            [
                breakpoints = 8496, 8224
            ]
            connect "Logical operator1.out" Junction42 as Connection367
            connect "work allowed.in" Junction43 as Connection368
            connect Junction43 on2.out as Connection369
            [
                breakpoints = 9048, 8720
            ]
            connect Goto3 Junction43 as Connection370
            connect From4 "Logical operator1.in" as Connection371
            connect on4.out Counter1.reset as Connection372
            connect on4.in1 t_cmp_6.Qn as Connection373
            [
                breakpoints = 8504, 8496; 8832, 8424
            ]
            connect on5.out on4.in as Connection374
            connect From5 on5.in as Connection375

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Controllable and Interauptable Load</p></body></html>"

                P {
                    label = "Power Consumption"
                    widget = edit
                    type = generic
                    default_value = "500.0"
                    unit = "W"
                    group = "General"
                }

                Ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "General"
                }

                start_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "7"
                    unit = "h"
                    group = "Start Time"
                }

                start_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "min"
                    group = "Start Time"
                }

                stop_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "11"
                    unit = "h"
                    group = "Stop Time"
                }

                stop_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "30"
                    unit = "min"
                    group = "Stop Time"
                }

                duration_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "h"
                    group = "Duration"
                }

                duration_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "23"
                    unit = "min"
                    group = "Duration"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images//dishwasher.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7560
            size = 88, 88
        ]

        component Subsystem "Washing Machine" {
            layout = dynamic
            component Subsystem t_cmp_4 {
                layout = dynamic
                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect Sum1.out cmp.in as Connection21
                [
                    breakpoints = 8280, 8152; 8280, 8208
                ]
                connect Junction1 Q as Connection27
                connect "Bus Split2.in" T_2 as Connection24
                connect h2m_1.out Sum1.in as Connection11
                connect h2m_2.out Sum2.in as Connection18
                connect Qn "Logical operator1.out" as Connection29
                connect cmp.out Junction1 as Connection26
                connect "Bus Split1.in" T_1 as Connection25
                connect cmp.in1 Sum2.out as Connection22
                [
                    breakpoints = 8280, 8224; 8280, 8288
                ]
                connect "Logical operator1.in" Junction1 as Connection28
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
            }
            [
                position = 8448, 8800
                size = 48, 72
            ]

            component Subsystem "STOP TIME" {
                layout = dynamic
                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8200, 8224
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8200, 8160
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8376, 8192
                ]

                connect Time "Bus Join.out" as Connection8
                [
                    breakpoints = 8336, 8192
                ]
                connect h_set.out "Bus Join.in" as Connection9
                connect "Bus Join.in1" m_set.out as Connection10
                [
                    breakpoints = 8248, 8200; 8248, 8224
                ]

                h = "stop_hours"
                m = "stop_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "23"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8176, 8816
                size = 48, 64
            ]

            component src_scada_input ON_OFF_HEMS {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7336, 8320
            ]

            component gen_logic_op on {
                operator = "OR"
            }
            [
                position = 7552, 8296
            ]

            component Subsystem s2hm {
                layout = dynamic
                component gen_c_function "C function2" {
                    in_terminal_dimensions = "1"
                    in_terminal_dimensions_str = "in 1"
                    in_terminal_labels = "[(\'in\', False)]"
                    in_terminal_properties = "int in;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1;1"
                    out_terminal_dimensions_str = "hour 1;min 1"
                    out_terminal_labels = "[(\'hour\', True), (\'min\', True)]"
                    out_terminal_properties = "int hour;int min;"
                    output_fnc = "/*Begin code section*/
hour = in/60;
min = in - hour*60;
/*End code section*/"
                }
                [
                    position = 8152, 8192
                    size = 48, 64
                ]

                component gen_bus_join "Bus Join3" {
                }
                [
                    position = 8288, 8192
                ]

                port Out {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8360, 8192
                ]

                port In {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8080, 8192
                ]

                connect "C function2.min" "Bus Join3.in1" as Connection40
                connect "C function2.hour" "Bus Join3.in" as Connection41
                connect "Bus Join3.out" Out as Connection37
                connect "C function2.in" In as Connection38
            }
            [
                position = 8256, 8464
                size = 48, 48
            ]

            component gen_product Product1 {
            }
            [
                position = 8584, 8368
            ]

            component Subsystem "START TIME" {
                layout = dynamic
                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8208, 8224
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8208, 8160
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8376, 8192
                ]

                connect Time "Bus Join.out" as Connection8
                [
                    breakpoints = 8336, 8192
                ]
                connect h_set.out "Bus Join.in" as Connection9
                connect m_set.out "Bus Join.in1" as Connection10

                h = "start_hours"
                m = "start_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "21"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8176, 8944
                size = 48, 64
            ]

            component "core/Counter" Counter1 {
                ext_reset = "rising"
            }
            [
                position = 8176, 8464
                size = 48, 48
            ]

            component Subsystem DURATION {
                layout = dynamic
                component gen_bus_join "Bus Join" {
                }
                [
                    position = 8288, 8192
                ]

                component src_constant h_set {
                    execution_rate = "ex_rate"
                    value = "h"
                }
                [
                    position = 8200, 8160
                ]

                component src_constant m_set {
                    execution_rate = "ex_rate"
                    value = "m"
                }
                [
                    position = 8200, 8224
                ]

                port Time {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8368, 8192
                ]

                connect h_set.out "Bus Join.in" as Connection8
                connect m_set.out "Bus Join.in1" as Connection9
                connect Time "Bus Join.out" as Connection10
                [
                    breakpoints = 8336, 8192
                ]

                h = "duration_hours"
                m = "duration_minutes"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    h {
                        label = "Hours"
                        widget = edit
                        type = generic
                        default_value = "1"
                        unit = "s"
                    }

                    m {
                        label = "Minutes"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "s"
                    }

                    ex_rate {
                        label = "Execution Rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8160, 8552
                size = 48, 64
            ]

            component gen_digital_probe "work allowed" {
            }
            [
                position = 8736, 8856
            ]

            component Subsystem t_cmp_5 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
                connect Junction1 Q as Connection27
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect "Logical operator1.in" Junction1 as Connection28
                connect h2m_1.out Sum1.in as Connection11
                connect cmp.out Junction1 as Connection26
                connect "Bus Split1.in" T_1 as Connection25
                connect h2m_2.out Sum2.in as Connection18
                connect Sum1.out cmp.in as Connection21
                [
                    breakpoints = 8280, 8152; 8280, 8208
                ]
                connect cmp.in1 Sum2.out as Connection22
                [
                    breakpoints = 8280, 8224; 8280, 8288
                ]
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect "Bus Split2.in" T_2 as Connection24
                connect Qn "Logical operator1.out" as Connection29
                connect "Bus Split1.out1" Sum1.in1 as Connection30
            }
            [
                position = 8448, 8928
                size = 48, 72
            ]

            component Subsystem t_cmp_6 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 8048, 8288
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 8448, 8304
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 8216, 8152
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 8048, 8152
                ]

                component gen_rel_op cmp {
                    relational_op = "<"
                }
                [
                    position = 8336, 8216
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 8144, 8120
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 8216, 8288
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 8144, 8256
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8152
                ]

                port Q {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8216
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7976, 8288
                ]

                port Qn {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8304
                ]

                junction Junction1 sp
                [
                    position = 8368, 8216
                ]

                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 8104, 8144; 8104, 8120
                ]
                connect Junction1 Q as Connection27
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 8088, 8280; 8104, 8280; 8104, 8256
                ]
                connect "Logical operator1.in" Junction1 as Connection28
                connect h2m_1.out Sum1.in as Connection11
                connect cmp.out Junction1 as Connection26
                connect "Bus Split1.in" T_1 as Connection25
                connect h2m_2.out Sum2.in as Connection18
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 8088, 8296; 8176, 8296
                ]
                connect "Bus Split2.in" T_2 as Connection24
                connect Qn "Logical operator1.out" as Connection29
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect Sum1.out cmp.in as Connection41
                [
                    breakpoints = 8280, 8152; 8280, 8208; 8296, 8208
                ]
                connect cmp.in1 Sum2.out as Connection40
                [
                    breakpoints = 8280, 8224; 8280, 8288; 8280, 8288
                ]
            }
            [
                position = 8352, 8512
                size = 48, 72
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 7552, 8960
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7456, 8952
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7424, 8376
            ]

            component gen_logic_op on2 {
            }
            [
                position = 8600, 8856
            ]

            component Subsystem remaining_duration_calc {
                layout = dynamic
                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 7704, 7968
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7576, 7904
                ]

                component gen_bus_split "Bus Split2" {
                }
                [
                    position = 7408, 8040
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 7576, 8040
                ]

                component gen_gain h2m_1 {
                    gain = "60"
                }
                [
                    position = 7504, 7872
                ]

                component gen_gain h2m_2 {
                    gain = "60"
                }
                [
                    position = 7504, 8008
                ]

                component gen_bus_split "Bus Split1" {
                }
                [
                    position = 7408, 7904
                ]

                port T_1 {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7328, 7904
                ]

                port T_2 {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7328, 8040
                ]

                port minutes {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7832, 7968
                ]

                connect "Bus Split1.out" h2m_1.in as Connection33
                [
                    breakpoints = 7456, 7896; 7456, 7872
                ]
                connect "Bus Split2.out1" Sum2.in1 as Connection31
                [
                    breakpoints = 7440, 8048; 7536, 8048
                ]
                connect "Bus Split1.in" T_1 as Connection25
                connect "Bus Split2.out" h2m_2.in as Connection32
                [
                    breakpoints = 7440, 8032; 7456, 8032; 7456, 8008
                ]
                connect "Bus Split2.in" T_2 as Connection24
                connect h2m_1.out Sum1.in as Connection11
                connect h2m_2.out Sum2.in as Connection18
                connect "Bus Split1.out1" Sum1.in1 as Connection30
                connect Sum3.in Sum1.out as Connection41
                [
                    breakpoints = 7656, 7960; 7640, 7960; 7640, 7904
                ]
                connect Sum3.in1 Sum2.out as Connection40
                [
                    breakpoints = 7640, 8040; 7640, 8040
                ]
                connect minutes Sum3.out as Connection42
            }
            [
                position = 8384, 8672
                size = 112, 56
            ]

            component gen_probe remaining_duration {
            }
            [
                position = 8544, 8672
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "P"
            }
            [
                position = 8504, 8400
            ]

            component gen_c_function "C function1" {
                global_variables = "uint state;uint old_state;uint new_state;"
                in_terminal_dimensions = "inherit;inherit;inherit"
                in_terminal_dimensions_str = "on inherit;loaded inherit;duration_expired inherit"
                in_terminal_labels = "[(\'on\', True), (\'loaded\', True), (\'duration_expired\', True)]"
                in_terminal_properties = "uint on;uint loaded;uint duration_expired;"
                init_fnc = "/*Begin code section*/
state = 0;
old_state = 0;
new_state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit;inherit"
                out_terminal_dimensions_str = "working inherit;available inherit;state_out inherit"
                out_terminal_labels = "[(\'working\', True), (\'available\', True), (\'state_out\', True)]"
                out_terminal_properties = "uint working;uint available;uint state_out;"
                output_fnc = "/*Begin code section*/
switch(state) {
    case 0 :
        working = 0;
        available = 0;
        state_out = 0;
        break;
    case 1 :
        working = 0;
        available = 1;
        state_out = 1;
        break;
    case 2 :
        working = 1;
        available = 1;
        state_out = 2;
        break;
    case 3 :
        working = 0;
        available = 1;
        state_out = 3;
        break;
}
/*End code section*/"
                update_fnc = "/*Begin code section*/
old_state = state;

switch(old_state) {
    case 0 : // NOT AVAILABLE
        if(loaded==1)
            new_state = 1;
        else
            new_state = old_state;
        break;
    case 1 : // AVAILABLE
        if(on==1)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 2 : // WORING
        if(duration_expired==1)
            new_state = 0;
        else if (duration_expired == 0 && on==0)
            new_state = 3;
        else
            new_state = old_state;
        break;
    case 3 : // ON HOLD
        if(on==1)
            new_state = 2;
        else
            new_state = old_state;
        break;
}

state = new_state;
/*End code section*/"
            }
            [
                position = 7840, 8376
                size = 152, 64
            ]

            component src_scada_input LOADED {
                execution_rate = "Ts"
                format = "uint"
                max = "1"
                min = "0"
                signal_type = "uint"
                unit = ""
            }
            [
                position = 7336, 8376
            ]

            component gen_logic_op on3 {
                operator = "NOT"
            }
            [
                position = 8544, 8600
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 8040, 8392
            ]

            component gen_digital_probe available {
            }
            [
                position = 8008, 8296
                rotation = left
            ]

            component gen_digital_probe working {
            }
            [
                position = 8104, 8296
                rotation = left
            ]

            component src_scada_input ON_USER {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7336, 8256
            ]

            component "core/Edge Detection" "Edge Detection2" {
            }
            [
                position = 7544, 8664
                size = 32, 32
            ]

            component gen_c_function "sample hold" {
                global_variables = "real state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "in inherit;trigger inherit"
                in_terminal_labels = "[(\'in\', True), (\'trigger\', True)]"
                in_terminal_properties = "int in;int trigger;"
                init_fnc = "/*Begin code section*/
state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(trigger==1){
    state = in;
}
/*End code section*/"
            }
            [
                position = 7640, 8648
                size = 72, 64
            ]

            component gen_c_function mod11 {
                in_terminal_dimensions = "7"
                in_terminal_dimensions_str = "in 7"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = (in[5] % 11)+5;
/*End code section*/"
            }
            [
                position = 7432, 8632
                size = 48, 64
            ]

            component "core/Edge Detection" "Edge Detection3" {
                edge = "rising"
            }
            [
                position = 7680, 8376
                size = 32, 32
            ]

            component gen_rel_op "Relational operator1" {
            }
            [
                position = 7800, 8656
            ]

            port P {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8744, 8368
            ]

            port t {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7304, 8952
            ]

            port random {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7312, 8632
            ]

            tag From2 {
                value = "time"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8336, 8784
            ]

            tag From1 {
                value = "time"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8352, 8912
            ]

            tag Goto1 {
                value = "time"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7648, 8960
            ]

            tag From3 {
                value = "dur_ex"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7672, 8456
                size = 65, 20
            ]

            tag Goto2 {
                value = "dur_ex"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8640, 8600
            ]

            junction Junction34 sp
            [
                position = 8296, 8464
            ]

            junction Junction35 sp
            [
                position = 8280, 8552
            ]

            junction Junction38 sp
            [
                position = 8104, 8360
            ]

            junction Junction39 sp
            [
                position = 8480, 8672
            ]

            junction Junction40 sp
            [
                position = 8104, 8360
            ]

            junction Junction41 sp
            [
                position = 7504, 8952
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Random logic for loading the washing machine</p></body></html> ENDCOMMENT 
            [
                position = 7352, 8568
            ]

            connect From2 t_cmp_4.T_1 as Connection189
            connect "STOP TIME.Time" t_cmp_4.T_2 as Connection188
            connect s2hm.In Counter1.out as Connection33
            connect t_cmp_5.T_1 From1 as Connection198
            connect t_cmp_5.T_2 "START TIME.Time" as Connection199
            connect "Bus Join1.out" Goto1 as Connection220
            connect P Product1.out as Connection221
            connect "Bus Split1.out2" "Bus Join1.in1" as Connection223
            connect t_cmp_4.Q on2.in as Connection237
            connect t_cmp_5.Qn on2.in1 as Connection238
            [
                breakpoints = 8560, 8912
            ]
            connect s2hm.Out Junction34 as Connection243
            connect Junction34 t_cmp_6.T_1 as Connection244
            connect DURATION.Time Junction35 as Connection246
            connect Junction35 t_cmp_6.T_2 as Connection247
            connect Junction34 remaining_duration_calc.T_1 as Connection256
            [
                breakpoints = 8296, 8464; 8296, 8576
            ]
            connect remaining_duration_calc.T_2 Junction35 as Connection257
            [
                breakpoints = 8280, 8616
            ]
            connect Product1.in1 Constant1.out as Connection258
            connect "work allowed.in" on2.out as Connection271
            [
                breakpoints = 8656, 8856
            ]
            connect on.out "C function1.on" as Connection277
            [
                breakpoints = 7592, 8296; 7728, 8296; 7728, 8352
            ]
            connect Junction38 "C function1.working" as Connection286
            connect Counter1.en Junction38 as Connection287
            connect From3 "C function1.duration_expired" as Connection290
            connect remaining_duration.in Junction39 as Connection291
            connect Junction39 remaining_duration_calc.minutes as Connection292
            connect on3.in Junction39 as Connection293
            connect on3.out Goto2 as Connection294
            connect on.in1 ON_OFF_HEMS.out as Connection297
            connect Termination2.in "C function1.state_out" as Connection299
            connect available.in "C function1.available" as Connection301
            connect Junction38 Junction40 as Connection306
            connect Junction40 working.in as Connection307
            [
                breakpoints = 8104, 8360; 8104, 8360; 8104, 8360
            ]
            connect Product1.in Junction40 as Connection308
            connect t_cmp_6.Qn Counter1.reset as Connection309
            [
                breakpoints = 8424, 8528; 8424, 8608; 8104, 8528; 8104, 8472
            ]
            connect t "Bus Split1.in" as Connection55
            connect Termination1.in LOADED.out as Connection310
            connect on.in ON_USER.out as Connection298
            connect "C function1.loaded" "Edge Detection3.Out1" as Connection351
            connect random mod11.in as Connection353
            [
                breakpoints = 7360, 8632
            ]
            connect "sample hold.in" mod11.out as Connection354
            connect "Edge Detection2.In1" "Bus Split1.out" as Connection355
            connect "sample hold.trigger" "Edge Detection2.Out1" as Connection356
            connect "Relational operator1.in" "sample hold.out" as Connection357
            connect "Bus Join1.in" Junction41 as Connection358
            connect Junction41 "Bus Split1.out1" as Connection359
            connect "Relational operator1.in1" Junction41 as Connection360
            [
                breakpoints = 7744, 8664; 7744, 8736; 7504, 8736
            ]
            connect "Relational operator1.out" "Edge Detection3.In1" as Connection361
            [
                breakpoints = 7856, 8632; 7656, 8536; 7576, 8496
            ]

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Controllable and Interauptable Load</p></body></html>"

                P {
                    label = "Power Consumption"
                    widget = edit
                    type = generic
                    default_value = "500"
                    unit = "W"
                    group = "General"
                }

                Ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "General"
                }

                start_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "6"
                    unit = "h"
                    group = "Start Time"
                }

                start_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "min"
                    group = "Start Time"
                }

                stop_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "10"
                    unit = "h"
                    group = "Stop Time"
                }

                stop_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "15"
                    unit = "min"
                    group = "Stop Time"
                }

                duration_hours {
                    label = "Hours"
                    widget = edit
                    type = generic
                    default_value = "2"
                    unit = "h"
                    group = "Duration"
                }

                duration_minutes {
                    label = "Minutes"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "min"
                    group = "Duration"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images\washing_machine.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7432
            size = 88, 88
        ]

        component Subsystem Heat_Pump {
            layout = dynamic
            component gen_product Product1 {
            }
            [
                position = 8184, 8560
            ]

            component src_scada_input Target_Temp {
                def_value = "23"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7792, 8456
            ]

            component gen_probe house_temperature {
            }
            [
                position = 8664, 8392
            ]

            component Subsystem temp_control {
                layout = dynamic
                component gen_sum Sum4 {
                    signs = "-+"
                }
                [
                    position = 8112, 8048
                ]

                component gen_sign Sign1 {
                }
                [
                    position = 8264, 8048
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                }
                [
                    position = 8448, 8376
                ]

                component "core/Hysteresis Function" "Hysteresis Function3" {
                    execution_rate = "Ts"
                    low_thr = "-2"
                    up_thr = "2"
                }
                [
                    position = 8256, 8432
                    size = 32, 32
                ]

                component gen_gain Gain1 {
                    gain = "-1"
                }
                [
                    position = 8344, 8432
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 8096, 8192
                ]

                component gen_sum Sum3 {
                    signs = "+-"
                }
                [
                    position = 8104, 8432
                ]

                component "core/Hysteresis Function" "Hysteresis Function2" {
                    execution_rate = "Ts"
                    low_thr = "-2"
                    up_thr = "2"
                }
                [
                    position = 8256, 8328
                    size = 32, 32
                ]

                port ambiental_temperature {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 7992
                ]

                port target_room_temperature {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8096
                ]

                port room {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8376
                ]

                port room_temp {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8304
                ]

                junction Junction1 sp
                [
                    position = 8056, 8200
                ]

                junction Junction2 sp
                [
                    position = 8032, 8184
                ]

                junction Junction3 sp
                [
                    position = 8000, 8096
                ]

                connect Sum3.out "Hysteresis Function3.in" as Connection31
                connect "Signal switch1.out" room as Connection53
                [
                    breakpoints = 8520, 8376
                ]
                connect Sum3.in1 Junction2 as Connection37
                connect Junction2 Junction3 as Connection39
                connect Gain1.out "Signal switch1.in1" as Connection48
                [
                    breakpoints = 8392, 8432; 8392, 8392
                ]
                connect Sum2.in1 Junction1 as Connection32
                connect Sum4.in ambiental_temperature as Connection38
                [
                    breakpoints = 8056, 8040; 8056, 7992
                ]
                connect Sign1.out "Signal switch1.in2" as Connection46
                connect Junction3 target_room_temperature as Connection40
                connect "Signal switch1.in" "Hysteresis Function2.out" as Connection42
                [
                    breakpoints = 8392, 8360; 8392, 8328
                ]
                connect Sum3.in Junction1 as Connection34
                connect Junction1 room_temp as Connection33
                [
                    breakpoints = 8056, 8200; 8000, 8200
                ]
                connect Sum4.in1 Junction3 as Connection41
                [
                    breakpoints = 8056, 8056; 8056, 8096
                ]
                connect "Hysteresis Function3.out" Gain1.in as Connection47
                connect "Hysteresis Function2.in" Sum2.out as Connection30
                [
                    breakpoints = 8208, 8328; 8208, 8192; 8208, 8192
                ]
                connect Sum4.out Sign1.in as Connection45
                connect Sum2.in Junction2 as Connection35
            }
            [
                position = 8024, 8456
                size = 184, 80
            ]

            component gen_probe ambiental_temperature {
            }
            [
                position = 8664, 8328
            ]

            component gen_probe target_temperature {
            }
            [
                position = 8664, 8264
            ]

            component gen_abs Abs1 {
            }
            [
                position = 8504, 8864
            ]

            component gen_probe consumption {
            }
            [
                position = 8664, 8456
            ]

            component src_scada_input ON_OFF_HEMS {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7336, 8560
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "P"
            }
            [
                position = 7984, 8600
            ]

            component gen_product Product2 {
            }
            [
                position = 8064, 8568
            ]

            component Subsystem "Room thermal model" {
                layout = dynamic
                component Subsystem "Room thermal model" {
                    layout = dynamic
                    component src_constant initialTemp {
                        execution_rate = "Ts"
                        value = "initial_temperature"
                    }
                    [
                        position = 8544, 8176
                    ]

                    component src_scada_input tune {
                        def_value = "60"
                        execution_rate = "Ts"
                        unit = ""
                    }
                    [
                        position = 8112, 8240
                    ]

                    component gen_sum Sum {
                        signs = "++"
                    }
                    [
                        position = 8472, 8224
                    ]

                    component gen_integrator Integrator {
                        show_init_condition = "external"
                    }
                    [
                        position = 8688, 8216
                        scale = 1, -1
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8264, 8280
                    ]

                    component Subsystem Outside {
                        layout = dynamic
                        component gen_sum Sum {
                            signs = "+-"
                        }
                        [
                            position = 8336, 8256
                        ]

                        component gen_product Product {
                        }
                        [
                            position = 8464, 8256
                        ]

                        component src_scada_input AMB_impact {
                            def_value = "3000"
                            execution_rate = "Ts"
                            unit = ""
                        }
                        [
                            position = 8288, 8128
                        ]

                        port RoomTemp_msr {
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8264
                        ]

                        port TempAmb {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8208
                        ]

                        port Out1 {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8256
                        ]

                        connect RoomTemp_msr Sum.in1 as Connection112
                        connect Sum.out Product.in1 as Connection10
                        connect Sum.in TempAmb as Connection97
                        [
                            breakpoints = 8232, 8248; 8232, 8208
                        ]
                        connect AMB_impact.out Product.in as Connection113
                        connect Product.out Out1 as Connection111
                    }
                    [
                        position = 8256, 8144
                        size = 112, 48
                    ]

                    port Temp {
                        position = right:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8800, 8216
                    ]

                    port TempAmb {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8136
                    ]

                    port Pref {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                    ]

                    junction Junction1 sp
                    [
                        position = 8744, 8216
                    ]

                    connect tune.out Product1.in as Connection140
                    connect Product1.out Sum.in1 as Connection138
                    connect Junction1 Temp as Connection136
                    connect TempAmb Outside.TempAmb as Connection117
                    connect Outside.RoomTemp_msr Junction1 as Connection137
                    [
                        breakpoints = 8168, 8152; 8168, 8096; 8512, 8096; 8512, 8096; 8744, 8096
                    ]
                    connect Sum.out Integrator.in as Connection134
                    connect initialTemp.out Integrator.init_condition_port as Connection9
                    connect Sum.in Outside.Out1 as Connection128
                    [
                        position = 0, 0
                        breakpoints = 8360, 8200
                    ]
                    connect Integrator.out Junction1 as Connection135
                    connect Product1.in1 Pref as Connection139
                }
                [
                    position = 8320, 7880
                    size = 144, 136
                ]

                port TempAmb {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7832
                ]

                port energy_in {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7928
                ]

                port TempRoom {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8512, 7880
                ]

                connect TempAmb "Room thermal model.TempAmb" as Connection1553
                connect TempRoom "Room thermal model.Temp" as Connection1556
                [
                    breakpoints = 8464, 7880
                ]
                connect "Room thermal model.Pref" energy_in as Connection1557

                initial_temperature = "15"
                room_volume = "1000"
                thermal_conductivity_outside = "10e-3"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This is model of one room in COMSA building.</p></body></html>"

                    outside_wall_area {
                        label = "Outside wall area"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m2"
                        group = "Room:1"
                    }

                    room_volume {
                        label = "Room volume"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m3"
                        group = "Room"
                    }

                    thermal_conductivity_outside {
                        label = "Outside thermal conductivity"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "J/sm2"
                        group = "Room"
                        no_evaluate
                    }

                    initial_temperature {
                        label = "Initial temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "°C"
                        group = "Room"
                        no_evaluate
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, "images/Comsa room.jpg")
                    ENDCODE
                }
            }
            [
                position = 8368, 8608
                size = 176, 128
            ]

            port P {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8656, 8864
            ]

            port Tamb {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7336, 8656
            ]

            port T_room {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8784, 8432
            ]

            tag Goto1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7976, 8384
            ]

            tag From1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8264
            ]

            tag Goto2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7440, 8696
            ]

            tag Goto3 {
                value = "T_house"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8560, 8608
            ]

            tag Goto4 {
                value = "power"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8632, 8800
            ]

            tag From2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8328
            ]

            tag From3 {
                value = "power"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8456
            ]

            tag From4 {
                value = "T_house"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8392
            ]

            junction Junction12 sp
            [
                position = 7872, 8456
            ]

            junction Junction13 sp
            [
                position = 7384, 8656
            ]

            junction Junction15 sp
            [
                position = 8584, 8864
            ]

            junction Junction18 sp
            [
                position = 8488, 8608
            ]

            junction Junction19 sp
            [
                position = 8248, 8560
            ]

            junction Junction20 sp
            [
                position = 7840, 8656
            ]

            junction Junction21 sp
            [
                position = 8608, 8392
            ]

            connect Product1.in temp_control.room as Connection271
            [
                breakpoints = 8144, 8456
            ]
            connect temp_control.target_room_temperature Junction12 as Connection291
            [
                breakpoints = 7912, 8456
            ]
            connect Junction12 Target_Temp.out as Connection292
            [
                breakpoints = 7872, 8456; 7824, 8456
            ]
            connect Goto1 Junction12 as Connection293
            connect Tamb Junction13 as Connection294
            connect Goto2 Junction13 as Connection296
            connect Abs1.out Junction15 as Connection300
            connect Junction15 P as Connection301
            connect Goto4 Junction15 as Connection302
            connect From3 consumption.in as Connection303
            connect From2 ambiental_temperature.in as Connection305
            connect target_temperature.in From1 as Connection306
            connect Product2.in1 Constant1.out as Connection258
            connect Product2.out Product1.in1 as Connection307
            connect ON_OFF_HEMS.out Product2.in as Connection308
            connect Goto3 Junction18 as Connection318
            connect Junction18 temp_control.room_temp as Connection319
            [
                breakpoints = 8488, 8608; 8488, 8736; 7912, 8736
            ]
            connect "Room thermal model.TempRoom" Junction18 as Connection320
            connect Product1.out Junction19 as Connection323
            [
                breakpoints = 8224, 8560
            ]
            connect Junction19 Abs1.in as Connection324
            [
                breakpoints = 8248, 8560; 8248, 8560
            ]
            connect "Room thermal model.energy_in" Junction19 as Connection325
            connect temp_control.ambiental_temperature Junction20 as Connection326
            connect Junction20 Junction13 as Connection327
            [
                breakpoints = 7840, 8656; 7840, 8656; 7384, 8656
            ]
            connect "Room thermal model.TempAmb" Junction20 as Connection328
            connect house_temperature.in Junction21 as Connection329
            connect Junction21 From4 as Connection330
            connect T_room Junction21 as Connection331

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Controllable and Interauptable Load</p></body></html>"

                P {
                    label = "Power Consumption"
                    widget = edit
                    type = generic
                    default_value = "1500"
                    unit = "W"
                    group = "General"
                }

                Ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images\heat_pump.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7056
            size = 88, 88
        ]

        component gen_probe P_heat_pump {
        }
        [
            position = 7104, 6840
            rotation = left
        ]

        component gen_probe P_boiler {
        }
        [
            position = 7232, 6840
            rotation = left
        ]

        component Subsystem Boiler {
            layout = dynamic
            component gen_probe room_temperature {
            }
            [
                position = 8664, 8328
            ]

            component gen_probe target_temperature {
            }
            [
                position = 8664, 8264
            ]

            component src_scada_input ON_OFF_HEMS {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7336, 8560
            ]

            component gen_probe water_temperature {
            }
            [
                position = 8664, 8392
            ]

            component Subsystem temp_control {
                layout = dynamic
                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 8096, 8192
                ]

                component "core/Hysteresis Function" "Hysteresis Function2" {
                    execution_rate = "Ts"
                    low_thr = "-5"
                    up_thr = "5"
                }
                [
                    position = 8256, 8328
                    size = 32, 32
                ]

                port target_water_temperature {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8096
                ]

                port heat_enb {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8424, 8328
                ]

                port water_temp {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8304
                ]

                connect "Hysteresis Function2.in" Sum2.out as Connection30
                [
                    breakpoints = 8208, 8328; 8208, 8192; 8208, 8192
                ]
                connect water_temp Sum2.in1 as Connection55
                [
                    breakpoints = 8000, 8200; 8056, 8200; 8056, 8200
                ]
                connect "Hysteresis Function2.out" heat_enb as Connection56
                connect target_water_temperature Sum2.in as Connection57
                [
                    breakpoints = 8000, 8096; 8032, 8184
                ]
            }
            [
                position = 8024, 8456
                size = 184, 80
            ]

            component Subsystem "Room thermal model" {
                layout = dynamic
                component Subsystem "Room thermal model" {
                    layout = dynamic
                    component gen_integrator Integrator {
                        show_init_condition = "external"
                    }
                    [
                        position = 8688, 8216
                        scale = 1, -1
                    ]

                    component src_constant initialTemp {
                        execution_rate = "Ts"
                        value = "initial_temperature"
                    }
                    [
                        position = 8544, 8176
                    ]

                    component gen_sum Sum {
                        signs = "++"
                    }
                    [
                        position = 8472, 8224
                    ]

                    component src_scada_input tune {
                        def_value = "80"
                        execution_rate = "Ts"
                        unit = ""
                    }
                    [
                        position = 8112, 8240
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8264, 8280
                    ]

                    component Subsystem Outside {
                        layout = dynamic
                        component gen_product Product {
                        }
                        [
                            position = 8464, 8256
                        ]

                        component src_scada_input AMB_impact {
                            def_value = "800"
                            execution_rate = "Ts"
                            unit = ""
                        }
                        [
                            position = 8288, 8128
                        ]

                        component gen_sum Sum {
                            signs = "+-"
                        }
                        [
                            position = 8336, 8256
                        ]

                        port RoomTemp_msr {
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8264
                        ]

                        port TempAmb {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8208
                        ]

                        port Out1 {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8256
                        ]

                        connect AMB_impact.out Product.in as Connection113
                        connect Sum.out Product.in1 as Connection10
                        connect Sum.in TempAmb as Connection97
                        [
                            breakpoints = 8232, 8248; 8232, 8208
                        ]
                        connect Product.out Out1 as Connection111
                        connect RoomTemp_msr Sum.in1 as Connection112
                    }
                    [
                        position = 8256, 8144
                        size = 112, 48
                    ]

                    port Pref {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                    ]

                    port TempAmb {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8136
                    ]

                    port Temp {
                        position = right:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8800, 8216
                    ]

                    junction Junction1 sp
                    [
                        position = 8744, 8216
                    ]

                    connect initialTemp.out Integrator.init_condition_port as Connection9
                    connect Sum.out Integrator.in as Connection134
                    connect TempAmb Outside.TempAmb as Connection117
                    connect Product1.out Sum.in1 as Connection138
                    connect Junction1 Temp as Connection136
                    connect tune.out Product1.in as Connection140
                    connect Product1.in1 Pref as Connection139
                    connect Integrator.out Junction1 as Connection135
                    connect Sum.in Outside.Out1 as Connection128
                    [
                        position = 0, 0
                        breakpoints = 8360, 8200
                    ]
                    connect Outside.RoomTemp_msr Junction1 as Connection137
                    [
                        breakpoints = 8168, 8152; 8168, 8096; 8512, 8096; 8512, 8096; 8744, 8096
                    ]
                }
                [
                    position = 8320, 7880
                    size = 144, 136
                ]

                port energy_in {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7928
                ]

                port TempRoom {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8512, 7880
                ]

                port TempAmb {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7832
                ]

                connect "Room thermal model.Pref" energy_in as Connection1557
                connect TempRoom "Room thermal model.Temp" as Connection1556
                [
                    breakpoints = 8464, 7880
                ]
                connect TempAmb "Room thermal model.TempAmb" as Connection1553

                initial_temperature = "15"
                room_volume = "1000"
                thermal_conductivity_outside = "10e-3"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This is model of one room in COMSA building.</p></body></html>"

                    outside_wall_area {
                        label = "Outside wall area"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m2"
                        group = "Room:1"
                    }

                    room_volume {
                        label = "Room volume"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m3"
                        group = "Room"
                    }

                    thermal_conductivity_outside {
                        label = "Outside thermal conductivity"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "J/sm2"
                        group = "Room"
                        no_evaluate
                    }

                    initial_temperature {
                        label = "Initial temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "°C"
                        group = "Room"
                        no_evaluate
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, "images/Comsa room.jpg")
                    ENDCODE
                }
            }
            [
                position = 8368, 8608
                size = 176, 128
            ]

            component gen_product Product1 {
            }
            [
                position = 8184, 8560
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "P"
            }
            [
                position = 7984, 8600
            ]

            component gen_product Product2 {
            }
            [
                position = 8064, 8568
            ]

            component src_scada_input Target_Temp {
                def_value = "55"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7792, 8456
            ]

            component gen_probe consumption {
            }
            [
                position = 8664, 8456
            ]

            component gen_abs Abs1 {
            }
            [
                position = 8504, 8864
            ]

            port Tamb {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7336, 8656
            ]

            port P {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8656, 8864
            ]

            tag Goto3 {
                value = "T_house"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8560, 8608
            ]

            tag Goto2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7504, 8696
            ]

            tag Goto4 {
                value = "power"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8632, 8800
            ]

            tag From4 {
                value = "T_house"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8392
            ]

            tag From1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8264
            ]

            tag From3 {
                value = "power"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8456
            ]

            tag From2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8328
            ]

            tag Goto1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7976, 8384
            ]

            junction Junction18 sp
            [
                position = 8488, 8608
            ]

            junction Junction19 sp
            [
                position = 8248, 8560
            ]

            junction Junction12 sp
            [
                position = 7872, 8456
            ]

            junction Junction15 sp
            [
                position = 8584, 8864
            ]

            junction Junction20 sp
            [
                position = 7384, 8656
            ]

            connect Goto1 Junction12 as Connection293
            connect Goto4 Junction15 as Connection302
            connect Abs1.out Junction15 as Connection300
            connect "Room thermal model.energy_in" Junction19 as Connection325
            connect ON_OFF_HEMS.out Product2.in as Connection308
            connect Goto3 Junction18 as Connection318
            connect Junction15 P as Connection301
            connect Product2.in1 Constant1.out as Connection258
            connect water_temperature.in From4 as Connection304
            connect Product2.out Product1.in1 as Connection307
            connect "Room thermal model.TempRoom" Junction18 as Connection320
            connect From2 room_temperature.in as Connection305
            connect From3 consumption.in as Connection303
            connect Junction18 temp_control.water_temp as Connection319
            [
                breakpoints = 8488, 8608; 8488, 8736; 7912, 8736
            ]
            connect Product1.out Junction19 as Connection323
            [
                breakpoints = 8224, 8560
            ]
            connect temp_control.target_water_temperature Junction12 as Connection291
            [
                breakpoints = 7912, 8456
            ]
            connect target_temperature.in From1 as Connection306
            connect Product1.in temp_control.heat_enb as Connection271
            [
                breakpoints = 8144, 8456
            ]
            connect Junction12 Target_Temp.out as Connection292
            [
                breakpoints = 7872, 8456; 7824, 8456
            ]
            connect Junction19 Abs1.in as Connection324
            [
                breakpoints = 8248, 8560; 8248, 8560
            ]
            connect Goto2 Junction20 as Connection330
            [
                breakpoints = 7440, 8696
            ]
            connect Junction20 Tamb as Connection331
            [
                breakpoints = 7384, 8656
            ]
            connect "Room thermal model.TempAmb" Junction20 as Connection332

            P = "1200"

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Controllable and Interauptable Load</p></body></html>"

                P {
                    label = "Power Consumption"
                    widget = edit
                    type = generic
                    default_value = "1000"
                    unit = "W"
                    group = "General"
                }

                Ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/boiler.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7192
            size = 88, 88
        ]

        component Subsystem Refrigerator {
            layout = dynamic
            component gen_abs Abs1 {
            }
            [
                position = 8504, 8864
            ]

            component gen_probe room_temperature {
            }
            [
                position = 8664, 8328
            ]

            component gen_probe consumption {
            }
            [
                position = 8664, 8456
            ]

            component src_scada_input ON_OFF_HEMS {
                def_value = "1"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7336, 8560
            ]

            component Subsystem "thermal model" {
                layout = dynamic
                component Subsystem "Room thermal model" {
                    layout = dynamic
                    component gen_product Product1 {
                    }
                    [
                        position = 8264, 8280
                    ]

                    component gen_sum Sum {
                        signs = "++"
                    }
                    [
                        position = 8472, 8224
                    ]

                    component Subsystem Outside {
                        layout = dynamic
                        component src_scada_input AMB_impact {
                            def_value = "800"
                            execution_rate = "Ts"
                            unit = ""
                        }
                        [
                            position = 8288, 8128
                        ]

                        component gen_sum Sum {
                            signs = "+-"
                        }
                        [
                            position = 8336, 8256
                        ]

                        component gen_product Product {
                        }
                        [
                            position = 8464, 8256
                        ]

                        port RoomTemp_msr {
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8264
                        ]

                        port TempAmb {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7904, 8208
                        ]

                        port Out1 {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8256
                        ]

                        connect Product.out Out1 as Connection111
                        connect Sum.out Product.in1 as Connection10
                        connect AMB_impact.out Product.in as Connection113
                        connect RoomTemp_msr Sum.in1 as Connection112
                        connect Sum.in TempAmb as Connection97
                        [
                            breakpoints = 8232, 8248; 8232, 8208
                        ]
                    }
                    [
                        position = 8256, 8144
                        size = 112, 48
                    ]

                    component src_constant initialTemp {
                        execution_rate = "Ts"
                        value = "initial_temperature"
                    }
                    [
                        position = 8544, 8176
                    ]

                    component src_scada_input tune {
                        def_value = "80"
                        execution_rate = "Ts"
                        unit = ""
                    }
                    [
                        position = 8112, 8240
                    ]

                    component gen_integrator Integrator {
                        show_init_condition = "external"
                    }
                    [
                        position = 8688, 8216
                        scale = 1, -1
                    ]

                    port Temp {
                        position = right:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8800, 8216
                    ]

                    port Pref {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                    ]

                    port TempAmb {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8136
                    ]

                    junction Junction1 sp
                    [
                        position = 8744, 8216
                    ]

                    connect Outside.RoomTemp_msr Junction1 as Connection137
                    [
                        breakpoints = 8168, 8152; 8168, 8096; 8512, 8096; 8512, 8096; 8744, 8096
                    ]
                    connect initialTemp.out Integrator.init_condition_port as Connection9
                    connect Sum.out Integrator.in as Connection134
                    connect TempAmb Outside.TempAmb as Connection117
                    connect Product1.out Sum.in1 as Connection138
                    connect Junction1 Temp as Connection136
                    connect tune.out Product1.in as Connection140
                    connect Product1.in1 Pref as Connection139
                    connect Integrator.out Junction1 as Connection135
                    connect Sum.in Outside.Out1 as Connection128
                    [
                        position = 0, 0
                        breakpoints = 8360, 8200
                    ]
                }
                [
                    position = 8320, 7880
                    size = 144, 136
                ]

                port TempAmb {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7832
                ]

                port energy_in {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 7928
                ]

                port TempRoom {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8512, 7880
                ]

                connect TempRoom "Room thermal model.Temp" as Connection1556
                [
                    breakpoints = 8464, 7880
                ]
                connect "Room thermal model.Pref" energy_in as Connection1557
                connect TempAmb "Room thermal model.TempAmb" as Connection1553

                initial_temperature = "15"
                room_volume = "1000"
                thermal_conductivity_outside = "10e-3"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This is model of one room in COMSA building.</p></body></html>"

                    outside_wall_area {
                        label = "Outside wall area"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m2"
                        group = "Room:1"
                    }

                    room_volume {
                        label = "Room volume"
                        widget = edit
                        type = generic
                        default_value = "100"
                        unit = "m3"
                        group = "Room"
                    }

                    thermal_conductivity_outside {
                        label = "Outside thermal conductivity"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "J/sm2"
                        group = "Room"
                        no_evaluate
                    }

                    initial_temperature {
                        label = "Initial temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "°C"
                        group = "Room"
                        no_evaluate
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, "images/Comsa room.jpg")
                    ENDCODE
                }
            }
            [
                position = 8368, 8608
                size = 176, 128
            ]

            component Subsystem temp_control {
                layout = dynamic
                component gen_sum Sum3 {
                    signs = "+-"
                }
                [
                    position = 8104, 8432
                ]

                component gen_gain Gain1 {
                    gain = "-1"
                }
                [
                    position = 8344, 8432
                ]

                component "core/Hysteresis Function" "Hysteresis Function3" {
                    execution_rate = "Ts"
                }
                [
                    position = 8256, 8432
                    size = 32, 32
                ]

                port room_temp {
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8392
                ]

                port cool_enb {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8576, 8432
                ]

                port target_room_temperature {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7968, 8472
                ]

                connect Sum3.out "Hysteresis Function3.in" as Connection31
                connect "Hysteresis Function3.out" Gain1.in as Connection47
                connect room_temp Sum3.in as Connection55
                connect Gain1.out cool_enb as Connection56
                connect Sum3.in1 target_room_temperature as Connection57
                [
                    breakpoints = 8064, 8440; 8064, 8472
                ]
            }
            [
                position = 8024, 8456
                size = 184, 80
            ]

            component src_scada_input Target_Temp {
                def_value = "4"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7792, 8456
            ]

            component gen_probe fridge_temperature {
            }
            [
                position = 8664, 8392
            ]

            component gen_probe target_temperature {
            }
            [
                position = 8664, 8264
            ]

            component gen_product Product2 {
            }
            [
                position = 8064, 8568
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "P"
            }
            [
                position = 7984, 8600
            ]

            component gen_product Product1 {
            }
            [
                position = 8184, 8560
            ]

            port P {
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8656, 8864
            ]

            port Tamb {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7336, 8656
            ]

            tag Goto4 {
                value = "power"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8632, 8800
            ]

            tag From4 {
                value = "T_house"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8392
            ]

            tag From1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8264
            ]

            tag From3 {
                value = "power"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8456
            ]

            tag Goto3 {
                value = "T_house"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8560, 8608
            ]

            tag From2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8552, 8328
            ]

            tag Goto1 {
                value = "T_target"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7976, 8384
            ]

            tag Goto2 {
                value = "T_amb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7488, 8696
            ]

            junction Junction18 sp
            [
                position = 8488, 8608
            ]

            junction Junction19 sp
            [
                position = 8248, 8560
            ]

            junction Junction12 sp
            [
                position = 7872, 8456
            ]

            junction Junction15 sp
            [
                position = 8584, 8864
            ]

            junction Junction20 sp
            [
                position = 7384, 8656
            ]

            connect "thermal model.TempRoom" Junction18 as Connection320
            connect ON_OFF_HEMS.out Product2.in as Connection308
            connect Goto1 Junction12 as Connection293
            connect From2 room_temperature.in as Connection305
            connect Goto3 Junction18 as Connection318
            connect Goto4 Junction15 as Connection302
            connect From3 consumption.in as Connection303
            connect Junction15 P as Connection301
            connect target_temperature.in From1 as Connection306
            connect Product1.in temp_control.cool_enb as Connection271
            [
                breakpoints = 8144, 8456
            ]
            connect Junction12 Target_Temp.out as Connection292
            [
                breakpoints = 7872, 8456; 7824, 8456
            ]
            connect Abs1.out Junction15 as Connection300
            connect Junction18 temp_control.room_temp as Connection319
            [
                breakpoints = 8488, 8608; 8488, 8736; 7912, 8736
            ]
            connect Junction19 Abs1.in as Connection324
            [
                breakpoints = 8248, 8560; 8248, 8560
            ]
            connect Product1.out Junction19 as Connection323
            [
                breakpoints = 8224, 8560
            ]
            connect Product2.in1 Constant1.out as Connection258
            connect "thermal model.energy_in" Junction19 as Connection325
            connect fridge_temperature.in From4 as Connection304
            connect temp_control.target_room_temperature Junction12 as Connection291
            [
                breakpoints = 7912, 8456
            ]
            connect Product2.out Product1.in1 as Connection307
            connect Goto2 Junction20 as Connection330
            [
                breakpoints = 7440, 8696
            ]
            connect Junction20 Tamb as Connection331
            [
                breakpoints = 7384, 8656
            ]
            connect "thermal model.TempAmb" Junction20 as Connection332

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Controllable and Interauptable Load</p></body></html>"

                P {
                    label = "Power Consumption"
                    widget = edit
                    type = generic
                    default_value = "1000"
                    unit = "W"
                    group = "General"
                }

                Ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/refrigerator.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7312
            size = 88, 88
        ]

        component gen_probe P_refrigerator {
        }
        [
            position = 7328, 6840
            rotation = left
        ]

        component gen_sum Sum1 {
            signs = "9"
        }
        [
            position = 8120, 7224
        ]

        component gen_probe P_grid_net {
        }
        [
            position = 8248, 7144
            rotation = left
        ]

        component Subsystem Uncontrollable {
            layout = dynamic
            component lut_1d Sunday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Sunday"
            }
            [
                position = 8048, 8448
            ]

            component lut_1d Saturday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Saturday"
            }
            [
                position = 8048, 8384
            ]

            component gen_c_function "C function1" {
                global_variables = "int week_day;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                init_fnc = "/*Begin code section*/
week_day = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = week_day + 1;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(in==1){
    week_day += 1;
}

if(week_day == 7){
    week_day = 0;
}
/*End code section*/"
            }
            [
                position = 8392, 7832
                size = 48, 48
            ]

            component "core/Edge Detection" "Edge Detection1" {
                edge = "rising"
            }
            [
                position = 8248, 7832
                size = 32, 32
            ]

            component lut_1d Monday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Monday"
            }
            [
                position = 8048, 8112
            ]

            component gen_c_function counter_15_minutes {
                global_variables = "int state;int counter;"
                in_terminal_labels = "[]"
                in_terminal_properties = ""
                init_fnc = "/*Begin code section*/
state = 0;
counter = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(counter==14){
    counter = 0;
    state +=1;
}
else {
    counter += 1;
}

if(state==96){
    state=0;
}
/*End code section*/"
            }
            [
                position = 7776, 8112
                size = 48, 48
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8152, 7848
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 8152, 7896
            ]

            component lut_1d Wednesday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Wednesday"
            }
            [
                position = 8048, 8224
            ]

            component lut_1d Friday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Friday"
            }
            [
                position = 8048, 8336
            ]

            component gen_probe Week_Days {
            }
            [
                position = 8592, 7832
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 8056, 7848
            ]

            component lut_1d Tuesday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Tuesday"
            }
            [
                position = 8048, 8160
            ]

            component sys_mp_signal_switch "Multiport signal switch1" {
                number_of_input_terminals = "7"
            }
            [
                position = 8464, 8264
            ]

            component lut_1d Thursday {
                execution_rate = "Ts"
                in_vec_x = "np.arange(0,96)"
                out_vec_f_x = "Thursday"
            }
            [
                position = 8048, 8272
            ]

            component gen_probe consumption {
            }
            [
                position = 8608, 8200
                rotation = left
            ]

            component gen_c_function mod7 {
                in_terminal_dimensions = "7"
                in_terminal_dimensions_str = "in 7"
                in_terminal_labels = "[(\'in\', False)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = (in[0] % 7)+1;
/*End code section*/"
            }
            [
                position = 7888, 7968
                size = 48, 64
            ]

            component "core/Edge Detection" "Edge Detection2" {
            }
            [
                position = 8528, 7904
                size = 32, 32
            ]

            component gen_c_function "sample hold" {
                global_variables = "real state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "in inherit;trigger inherit"
                in_terminal_labels = "[(\'in\', True), (\'trigger\', True)]"
                in_terminal_properties = "int in;int trigger;"
                init_fnc = "/*Begin code section*/
state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
out = state;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if(trigger==1){
    state = in;
}
/*End code section*/"
            }
            [
                position = 8328, 7984
                size = 72, 64
            ]

            component gen_probe Change {
            }
            [
                position = 8504, 8048
            ]

            port P {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8784, 8264
            ]

            port random {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7776, 7968
            ]

            port time {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7776, 7848
            ]

            junction Junction3 sp
            [
                position = 7968, 8224
            ]

            junction Junction4 sp
            [
                position = 7968, 8272
            ]

            junction Junction1 sp
            [
                position = 7968, 8112
            ]

            junction Junction2 sp
            [
                position = 7968, 8160
            ]

            junction Junction5 sp
            [
                position = 7968, 8336
            ]

            junction Junction6 sp
            [
                position = 7968, 8384
            ]

            junction Junction9 sp
            [
                position = 8608, 8264
            ]

            junction Junction10 sp
            [
                position = 8480, 7832
            ]

            junction Junction11 sp
            [
                position = 8424, 8048
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LUT change timed with day change</p></body></html> ENDCOMMENT 
            [
                position = 8384, 7944
            ]

            connect Junction3 Junction2 as Connection300
            connect Wednesday.value "Multiport signal switch1.in2" as Connection313
            [
                breakpoints = 8304, 8224; 8304, 8256
            ]
            connect Thursday.addr Junction4 as Connection302
            connect Termination1.in "Bus Split1.out1" as Connection330
            connect Tuesday.value "Multiport signal switch1.in1" as Connection312
            [
                breakpoints = 8320, 8160; 8320, 8240
            ]
            connect Junction4 Junction3 as Connection303
            connect "Edge Detection1.In1" "Bus Split1.out" as Connection320
            connect Sunday.value "Multiport signal switch1.in6" as Connection314
            connect Junction2 Junction1 as Connection297
            connect Friday.addr Junction5 as Connection305
            connect Wednesday.addr Junction3 as Connection299
            connect Monday.value "Multiport signal switch1.in" as Connection291
            [
                breakpoints = 8336, 8112; 8336, 8224
            ]
            connect Junction5 Junction4 as Connection306
            connect "Edge Detection1.Out1" "C function1.in" as Connection329
            [
                breakpoints = 8328, 7832
            ]
            connect Saturday.addr Junction6 as Connection308
            connect Termination2.in "Bus Split1.out2" as Connection331
            connect Friday.value "Multiport signal switch1.in4" as Connection316
            [
                breakpoints = 8304, 8336; 8304, 8288
            ]
            connect counter_15_minutes.out Junction1 as Connection293
            connect Junction6 Junction5 as Connection309
            connect Sunday.addr Junction6 as Connection310
            connect Tuesday.addr Junction2 as Connection296
            connect "Multiport signal switch1.in3" Thursday.value as Connection311
            connect Saturday.value "Multiport signal switch1.in5" as Connection315
            [
                breakpoints = 8320, 8384; 8320, 8304
            ]
            connect Junction1 Monday.addr as Connection294
            connect "Multiport signal switch1.out" Junction9 as Connection334
            connect Junction9 P as Connection335
            connect consumption.in Junction9 as Connection336
            connect random mod7.in as Connection340
            connect "Bus Split1.in" time as Connection341
            connect "C function1.out" Junction10 as Connection342
            connect Junction10 Week_Days.in as Connection343
            connect "Edge Detection2.In1" Junction10 as Connection344
            connect mod7.out "sample hold.in" as Connection345
            connect "sample hold.trigger" "Edge Detection2.Out1" as Connection346
            [
                breakpoints = 8584, 7928; 8584, 7904
            ]
            connect "sample hold.out" Junction11 as Connection348
            connect Junction11 "Multiport signal switch1.ctrl" as Connection349
            connect Change.in Junction11 as Connection350

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images//tv.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7680
            size = 88, 88
        ]

        component Subsystem Battery {
            layout = dynamic
            component gen_c_function "C function2" {
                global_variables = "int state;int old_state;int new_state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "soc inherit;mode inherit"
                in_terminal_labels = "[(\'soc\', True), (\'mode\', True)]"
                in_terminal_properties = "real soc;int mode;"
                init_fnc = "/*Begin code section*/
state = 0;
old_state = 0;
new_state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
switch(state) {
    case 0 : // NOT Working
        out = 0;
        break;
    case 1 : // Discharge
        out = 1;
        break;
    case 2 : // Charge
        out = -1;
        break;
}
/*End code section*/"
                update_fnc = "/*Begin code section*/
old_state = state;

switch(old_state) {
    case 0 : // NOT Working
        if(mode==1 && soc>=10)
            new_state = 1;
        else if(mode==2 && soc <= 95)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 1 : // Discharge
        if(mode==0 || soc<10)
            new_state = 0;
        else if(mode==2 && soc <= 95)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 2 : // Charge
        if(mode==0 || soc>95)
            new_state = 0;
        else if(mode==1 && soc>=10)
            new_state = 1;
        else
            new_state = old_state;
        break;
}

state = new_state;
/*End code section*/"
            }
            [
                position = 8528, 8200
                size = 80, 80
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "hours inherit"
                in_terminal_labels = "[(\'hours\', False)]"
                in_terminal_properties = "int hours;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "mode inherit"
                out_terminal_labels = "[(\'mode\', False)]"
                out_terminal_properties = "int mode;"
                output_fnc = "/*Begin code section*/
if(hours>8 && hours<13)
    mode = 1; //discharge battery
else if(hours>=13 &&  hours <= 18)
    mode = 2; //charge battery
else
    mode = 0;
/*End code section*/"
            }
            [
                position = 7952, 8352
                size = 48, 48
            ]

            component gen_probe SOC {
            }
            [
                position = 8600, 8016
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7912, 8424
            ]

            component gen_product Product2 {
                signs = "**"
            }
            [
                position = 7872, 8184
            ]

            component src_scada_input "Battery power" {
                def_value = "P*1000.0"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7752, 8192
            ]

            component Subsystem "SOC Model" {
                layout = dynamic
                component gen_gain Gain1 {
                    execution_rate = "Ts"
                    gain = "(100/Q_nom)/3.6e-3"
                }
                [
                    position = 7472, 8128
                    hide_name = True
                ]

                component lut_1d lut {
                    execution_rate = "Ts"
                    in_vec_x = "x_vector"
                    out_vec_f_x = "y_vector"
                }
                [
                    position = 7824, 8128
                    rotation = down
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    execution_rate = "Ts"
                    gain = "1e-6"
                }
                [
                    position = 7760, 8080
                    rotation = left
                    hide_name = True
                ]

                component gen_integrator Integrator1 {
                    execution_rate = "Ts"
                    init_value = "1e8*(1-Init_SOC/100)"
                    limit_lower = "0"
                    limit_output = "True"
                    limit_upper = "1e8"
                }
                [
                    position = 7680, 8128
                    hide_name = True
                ]

                component gen_gain Gain3 {
                    execution_rate = "Ts"
                    gain = "60/Ts"
                }
                [
                    position = 7560, 8128
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    execution_rate = "Ts"
                    signs = "+-"
                }
                [
                    position = 7808, 8032
                    hide_name = True
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "100"
                }
                [
                    position = 7712, 8024
                    hide_name = True
                ]

                port V {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7944, 8128
                ]

                port I {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7392, 8128
                ]

                port SOC {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7944, 8032
                ]

                junction Junction14 sp
                [
                    position = 7760, 8128
                ]

                connect Integrator1.in Gain3.out as Connection1019
                connect V lut.value as Connection1017
                connect Gain2.in Junction14 as Connection1015
                connect Gain3.in Gain1.out as Connection1020
                connect SOC Sum1.out as Connection1018
                connect Junction14 Integrator1.out as Connection12
                connect lut.addr Junction14 as Connection1014
                connect I Gain1.in as Connection1016
                connect Constant2.out Sum1.in as Connection25
                connect Sum1.in1 Gain2.out as Connection23

                I_nom = "P*1000.0/V"
                Init_SOC = "init_soc"
                Q_nom = "E*1000.0/V"
                Ts = "Ts"
                V_nom = "V"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    V_nom {
                        label = "Nominal voltage"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "V"
                    }

                    I_nom {
                        label = "Nominal current"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "A"
                    }

                    Q_nom {
                        label = "Capacity"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "Ah"
                    }

                    Init_SOC {
                        label = "Initial SOC"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "%"
                    }

                    Ts {
                        label = "execution_rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "s"
                    }

                    x_vector {
                        label = "x_vector"
                        widget = edit
                        type = generic
                        default_value = "0"
                        nonvisible
                    }

                    y_vector {
                        label = "y_vector"
                        widget = edit
                        type = generic
                        default_value = "0"
                        nonvisible
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        V_nom = mdl.get_property_value(mdl.prop(item_handle, "V_nom"))
                        I_nom = mdl.get_property_value(mdl.prop(item_handle, "I_nom"))
                        Q_nom = mdl.get_property_value(mdl.prop(item_handle, "Q_nom"))
                        Init_SOC = mdl.get_property_value(mdl.prop(item_handle, "Init_SOC"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        x_vector = mdl.get_property_value(mdl.prop(item_handle, "x_vector"))
                        y_vector = mdl.get_property_value(mdl.prop(item_handle, "y_vector"))
                        # HEADER STOP
                        # Battery Defination 
                        
                        import math
                        
                        def get_SOC_curve_points(bat_type):
                            #--------------------------------------------------------------------------------
                            # Description:
                            #   This function returns the important points of SOC curve based on chosen battery type.
                            #
                            # Inputs:
                            #   #   battery_type: string value of chosen battery type
                            #
                            # Outputs:
                            #   Ke_full: full charge voltage, real value
                            #   Kdisc_I: nominal discharge current, real value
                            #   Kq_nom: capacity at nominal voltage, real value
                            #   Ke_exp: voltage at exponential zone, real value
                            #   Kq_exp: capacity at exponential zone, real value
                            #
                            # Author:
                            #   Adrien Genic, June 2016
                            #--------------------------------------------------------------------------------
                            BATTERY_TYPE = { # battery type        : (Ke_full,Kdisc_I,Kq_nom,Ke_exp,Kq_exp)
                                            "Lead-Acid"            : (108.0, 5.0, 50.0, 102.5, 0.9),
                                            "Lithium-Ion"          : (116.0, 20.0, 93.5, 103.0, 85.0),
                                            "Nickel-Cadmium"       : (115.0, 20.0, 90.5, 103.0, 40.0),
                                            "Nickel-Metal-Hydrid"  : (117.0, 20.0, 76.2, 105.0, 20.0)
                                            }
                            return BATTERY_TYPE[bat_type]
                        
                        def battery_characteristic_curve(battery_type, Enom, Qfull, Ke_full, Kdisc_I, Rseries, Kq_nom, Ke_exp, Kq_exp, for_plot=True):
                            #--------------------------------------------------------------------------------
                            # Description:
                            #   This function calculates the state of charge curve of the battery according to the input parameters.
                            #
                            # Inputs:
                            #   battery_type: string value of chosen battery type
                            #   Enom: battery nominal voltage, real value
                            #   Qfull: battery full state of charge, real value
                            #   Ke_full: full charge voltage, real value
                            #   Kdisc_I: nominal discharge current, real value
                            #   Rseries: internal resistance, real value
                            #   Kq_nom: capacity at nominal voltage, real value
                            #   Ke_exp: voltage at exponential zone, real value
                            #   Kq_exp: capacity at exponential zone, real value
                            #
                            # Outputs:
                            #   SOC: vector of state of charge values (X values on SOC graph)
                            #   Ebat: vector of battery voltages (Y values on SOC graph)
                            #
                            # Author:
                            #   Adrien Genic, June 2016
                            #--------------------------------------------------------------------------------
                            # Maximal voltage of the capacitor representing the fully discharged battery
                            MAX_CAP_U = 1e8
                        
                            if for_plot:
                                NB_OVERCHARGE_POINTS = 0
                                NB_POINTS = 1900
                            else:
                                # If the data is created for compiler (not for plotting) we are adding 20 points
                                # for overcharge
                                NB_POINTS = 500
                                NB_OVERCHARGE_POINTS = 20
                        
                            # First get appropriate parameters
                            try:
                                (Ke_full, Kdisc_I, Kq_nom, Ke_exp, Kq_exp) = get_SOC_curve_points(battery_type)
                            except KeyError:
                                pass
                        
                            # Calculate all the data values that are going to be needed
                            Efull   = Ke_full / 100. * Enom
                            Eexp    = Ke_exp  / 100. * Enom
                            Qexp    = Kq_exp  / 100. * Qfull
                            Qnom    = Kq_nom  / 100. * Qfull
                            Idisc   = Kdisc_I / 100. * Qfull
                        
                            A = Efull - Eexp
                            B = 3 / Qexp
                            K = (Efull - Enom + A * (math.exp(-B*Qnom)-1)) * (Qfull-Qnom)/Qnom
                        
                            E0 = Efull + K + Rseries*Idisc - A
                        
                            E_batt = [0]*NB_POINTS
                            SOC = [0]*NB_POINTS
                        
                            # Calculate num_data_points values, just for better view
                            for i in range(NB_OVERCHARGE_POINTS,NB_POINTS):
                        
                                it = Qfull*(i-NB_OVERCHARGE_POINTS)/(NB_POINTS-NB_OVERCHARGE_POINTS)
                        
                                SOC[i] = it
                                try:
                                    E_batt[i]  = E0-K*(Qfull/(Qfull-it))+A*math.exp(-B*it)
                                except ZeroDivisionError:
                                    E_batt[i] = 0
                        
                                if E_batt[i] <= 0 or i > (NB_POINTS-1) :
                                    E_batt[i]  = 0
                        
                            if not for_plot:
                                # This is for compiler data
                                slope = (E_batt[NB_OVERCHARGE_POINTS]-10.0*Enom)/NB_OVERCHARGE_POINTS
                                for i in range(0,NB_OVERCHARGE_POINTS):
                                    E_batt[i] = slope*(i-NB_OVERCHARGE_POINTS) + E_batt[NB_OVERCHARGE_POINTS]
                        
                                x_vect=list(np.linspace(-MAX_CAP_U*NB_OVERCHARGE_POINTS/(NB_POINTS-NB_OVERCHARGE_POINTS),MAX_CAP_U,NB_POINTS))
                        
                                return x_vect, E_batt
                        
                            else:
                                return SOC, E_batt
                        
                        
                        # Battery Type Defination 
                        
                        battery_type = 'Lithium-Ion'
                        Enom = mdl.get_property_value(mdl.prop(item_handle, "V_nom"))  # Nominal voltage [V]
                        Qfull = mdl.get_property_value(mdl.prop(item_handle, "Q_nom"))  # Capacity [Ah]
                        Ke_full = 116.0  # Full charge voltage [%]
                        Kdisc_I = 20.0  # Nominal discharge current [%]
                        Rseries = 1e-6  # Internal resistance [Ohms]
                        Kq_nom = 93.5  # Capacity at nominal voltage [%]
                        Ke_exp = 103  # Voltage at exponential zone [%]
                        Kq_exp = 85.0  # Capacity at exponential zone [%]
                        
                        
                        x_vector, y_vector = battery_characteristic_curve(battery_type, Enom, Qfull, Ke_full, Kdisc_I, Rseries, Kq_nom, Ke_exp, Kq_exp, for_plot=False)
                        
                        
                        mdl.set_property_value(mdl.prop(item_handle, "x_vector"), x_vector)
                        mdl.set_property_value(mdl.prop(item_handle, "y_vector"), y_vector)
                    ENDCODE
                }
            }
            [
                position = 8248, 8192
                size = 128, 56
            ]

            component gen_probe mode {
            }
            [
                position = 8736, 8200
            ]

            component gen_product Product1 {
                signs = "*/"
            }
            [
                position = 8048, 8192
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7824, 8352
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7912, 8288
            ]

            component gen_gain Gain1 {
                gain = "-1"
            }
            [
                position = 8120, 8096
            ]

            port P {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8736, 8096
            ]

            port time {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7744, 8352
            ]

            junction Junction1 sp
            [
                position = 8624, 8200
            ]

            junction Junction3 sp
            [
                position = 8384, 8184
            ]

            junction Junction2 sp
            [
                position = 7936, 8184
            ]

            connect Junction1 mode.in as Connection1050
            connect "C function2.out" Junction1 as Connection1049
            [
                breakpoints = 8608, 8200
            ]
            connect Termination2.in "Bus Split1.out2" as Connection1071
            connect Junction3 "C function2.soc" as Connection1074
            connect Termination1.in "Bus Split1.out" as Connection1070
            connect SOC.in Junction3 as Connection1075
            connect "SOC Model.SOC" Junction3 as Connection1073
            connect Product1.in Junction2 as Connection1064
            connect Product2.in Junction1 as Connection1051
            [
                breakpoints = 7824, 8176; 7824, 8128; 8624, 8128
            ]
            connect "SOC Model.V" Product1.in1 as Connection1067
            [
                breakpoints = 8328, 8256; 8008, 8256
            ]
            connect "C function3.mode" "C function2.mode" as Connection1072
            connect Product2.in1 "Battery power.out" as Connection1047
            connect "Bus Split1.in" time as Connection1068
            connect Product2.out Junction2 as Connection1062
            connect "Bus Split1.out1" "C function3.hours" as Connection1069
            connect "SOC Model.I" Product1.out as Connection1065
            connect Junction2 Gain1.in as Connection1076
            [
                breakpoints = 7936, 8184; 7936, 8096
            ]
            connect Gain1.out P as Connection1077

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                P {
                    label = "Nominal Power"
                    widget = edit
                    type = generic
                    default_value = "5"
                    unit = "kW"
                }

                E {
                    label = "Capacity"
                    widget = edit
                    type = generic
                    default_value = "20"
                    unit = "kWh"
                }

                init_soc {
                    label = "Initial State of Charge"
                    widget = edit
                    type = generic
                    default_value = "100"
                    unit = "%"
                }

                Ts {
                    label = "execution_rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                }

                V {
                    label = "Nominal Voltage"
                    widget = edit
                    type = generic
                    default_value = "500"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images//battery.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7808
            size = 88, 88
        ]

        component Subsystem EV {
            layout = dynamic
            component gen_terminator Termination1 {
            }
            [
                position = 7912, 8288
            ]

            component gen_product Product2 {
                signs = "**"
            }
            [
                position = 7872, 8184
            ]

            component gen_probe SOC {
            }
            [
                position = 8600, 8016
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7912, 8424
            ]

            component Subsystem "SOC Model" {
                layout = dynamic
                component gen_gain Gain2 {
                    execution_rate = "Ts"
                    gain = "1e-6"
                }
                [
                    position = 7760, 8080
                    rotation = left
                    hide_name = True
                ]

                component gen_integrator Integrator1 {
                    execution_rate = "Ts"
                    init_value = "1e8*(1-Init_SOC/100)"
                    limit_lower = "0"
                    limit_output = "True"
                    limit_upper = "1e8"
                }
                [
                    position = 7680, 8128
                    hide_name = True
                ]

                component lut_1d lut {
                    execution_rate = "Ts"
                    in_vec_x = "x_vector"
                    out_vec_f_x = "y_vector"
                }
                [
                    position = 7824, 8128
                    rotation = down
                    scale = -1, 1
                ]

                component gen_gain Gain3 {
                    execution_rate = "Ts"
                    gain = "60/Ts"
                }
                [
                    position = 7560, 8128
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    execution_rate = "Ts"
                    gain = "(100/Q_nom)/3.6e-3"
                }
                [
                    position = 7472, 8128
                    hide_name = True
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "100"
                }
                [
                    position = 7712, 8024
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    execution_rate = "Ts"
                    signs = "+-"
                }
                [
                    position = 7808, 8032
                    hide_name = True
                ]

                port SOC {
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7944, 8032
                ]

                port I {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7392, 8128
                ]

                port V {
                    position = right:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7944, 8128
                ]

                junction Junction14 sp
                [
                    position = 7760, 8128
                ]

                connect lut.addr Junction14 as Connection1014
                connect Junction14 Integrator1.out as Connection12
                connect SOC Sum1.out as Connection1018
                connect Constant2.out Sum1.in as Connection25
                connect I Gain1.in as Connection1016
                connect Gain3.in Gain1.out as Connection1020
                connect Gain2.in Junction14 as Connection1015
                connect Sum1.in1 Gain2.out as Connection23
                connect V lut.value as Connection1017
                connect Integrator1.in Gain3.out as Connection1019

                I_nom = "P*1000.0/V"
                Init_SOC = "init_soc"
                Q_nom = "E*1000.0/V"
                Ts = "Ts"
                V_nom = "V"

                mask {
                    description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                    V_nom {
                        label = "Nominal voltage"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "V"
                    }

                    I_nom {
                        label = "Nominal current"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "A"
                    }

                    Q_nom {
                        label = "Capacity"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "Ah"
                    }

                    Init_SOC {
                        label = "Initial SOC"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "%"
                    }

                    Ts {
                        label = "execution_rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "s"
                    }

                    x_vector {
                        label = "x_vector"
                        widget = edit
                        type = generic
                        default_value = "0"
                        nonvisible
                    }

                    y_vector {
                        label = "y_vector"
                        widget = edit
                        type = generic
                        default_value = "0"
                        nonvisible
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        V_nom = mdl.get_property_value(mdl.prop(item_handle, "V_nom"))
                        I_nom = mdl.get_property_value(mdl.prop(item_handle, "I_nom"))
                        Q_nom = mdl.get_property_value(mdl.prop(item_handle, "Q_nom"))
                        Init_SOC = mdl.get_property_value(mdl.prop(item_handle, "Init_SOC"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        x_vector = mdl.get_property_value(mdl.prop(item_handle, "x_vector"))
                        y_vector = mdl.get_property_value(mdl.prop(item_handle, "y_vector"))
                        # HEADER STOP
                        # Battery Defination 
                        
                        import math
                        
                        def get_SOC_curve_points(bat_type):
                            #--------------------------------------------------------------------------------
                            # Description:
                            #   This function returns the important points of SOC curve based on chosen battery type.
                            #
                            # Inputs:
                            #   #   battery_type: string value of chosen battery type
                            #
                            # Outputs:
                            #   Ke_full: full charge voltage, real value
                            #   Kdisc_I: nominal discharge current, real value
                            #   Kq_nom: capacity at nominal voltage, real value
                            #   Ke_exp: voltage at exponential zone, real value
                            #   Kq_exp: capacity at exponential zone, real value
                            #
                            # Author:
                            #   Adrien Genic, June 2016
                            #--------------------------------------------------------------------------------
                            BATTERY_TYPE = { # battery type        : (Ke_full,Kdisc_I,Kq_nom,Ke_exp,Kq_exp)
                                            "Lead-Acid"            : (108.0, 5.0, 50.0, 102.5, 0.9),
                                            "Lithium-Ion"          : (116.0, 20.0, 93.5, 103.0, 85.0),
                                            "Nickel-Cadmium"       : (115.0, 20.0, 90.5, 103.0, 40.0),
                                            "Nickel-Metal-Hydrid"  : (117.0, 20.0, 76.2, 105.0, 20.0)
                                            }
                            return BATTERY_TYPE[bat_type]
                        
                        def battery_characteristic_curve(battery_type, Enom, Qfull, Ke_full, Kdisc_I, Rseries, Kq_nom, Ke_exp, Kq_exp, for_plot=True):
                            #--------------------------------------------------------------------------------
                            # Description:
                            #   This function calculates the state of charge curve of the battery according to the input parameters.
                            #
                            # Inputs:
                            #   battery_type: string value of chosen battery type
                            #   Enom: battery nominal voltage, real value
                            #   Qfull: battery full state of charge, real value
                            #   Ke_full: full charge voltage, real value
                            #   Kdisc_I: nominal discharge current, real value
                            #   Rseries: internal resistance, real value
                            #   Kq_nom: capacity at nominal voltage, real value
                            #   Ke_exp: voltage at exponential zone, real value
                            #   Kq_exp: capacity at exponential zone, real value
                            #
                            # Outputs:
                            #   SOC: vector of state of charge values (X values on SOC graph)
                            #   Ebat: vector of battery voltages (Y values on SOC graph)
                            #
                            # Author:
                            #   Adrien Genic, June 2016
                            #--------------------------------------------------------------------------------
                            # Maximal voltage of the capacitor representing the fully discharged battery
                            MAX_CAP_U = 1e8
                        
                            if for_plot:
                                NB_OVERCHARGE_POINTS = 0
                                NB_POINTS = 1900
                            else:
                                # If the data is created for compiler (not for plotting) we are adding 20 points
                                # for overcharge
                                NB_POINTS = 500
                                NB_OVERCHARGE_POINTS = 20
                        
                            # First get appropriate parameters
                            try:
                                (Ke_full, Kdisc_I, Kq_nom, Ke_exp, Kq_exp) = get_SOC_curve_points(battery_type)
                            except KeyError:
                                pass
                        
                            # Calculate all the data values that are going to be needed
                            Efull   = Ke_full / 100. * Enom
                            Eexp    = Ke_exp  / 100. * Enom
                            Qexp    = Kq_exp  / 100. * Qfull
                            Qnom    = Kq_nom  / 100. * Qfull
                            Idisc   = Kdisc_I / 100. * Qfull
                        
                            A = Efull - Eexp
                            B = 3 / Qexp
                            K = (Efull - Enom + A * (math.exp(-B*Qnom)-1)) * (Qfull-Qnom)/Qnom
                        
                            E0 = Efull + K + Rseries*Idisc - A
                        
                            E_batt = [0]*NB_POINTS
                            SOC = [0]*NB_POINTS
                        
                            # Calculate num_data_points values, just for better view
                            for i in range(NB_OVERCHARGE_POINTS,NB_POINTS):
                        
                                it = Qfull*(i-NB_OVERCHARGE_POINTS)/(NB_POINTS-NB_OVERCHARGE_POINTS)
                        
                                SOC[i] = it
                                try:
                                    E_batt[i]  = E0-K*(Qfull/(Qfull-it))+A*math.exp(-B*it)
                                except ZeroDivisionError:
                                    E_batt[i] = 0
                        
                                if E_batt[i] <= 0 or i > (NB_POINTS-1) :
                                    E_batt[i]  = 0
                        
                            if not for_plot:
                                # This is for compiler data
                                slope = (E_batt[NB_OVERCHARGE_POINTS]-10.0*Enom)/NB_OVERCHARGE_POINTS
                                for i in range(0,NB_OVERCHARGE_POINTS):
                                    E_batt[i] = slope*(i-NB_OVERCHARGE_POINTS) + E_batt[NB_OVERCHARGE_POINTS]
                        
                                x_vect=list(np.linspace(-MAX_CAP_U*NB_OVERCHARGE_POINTS/(NB_POINTS-NB_OVERCHARGE_POINTS),MAX_CAP_U,NB_POINTS))
                        
                                return x_vect, E_batt
                        
                            else:
                                return SOC, E_batt
                        
                        
                        # Battery Type Defination 
                        
                        battery_type = 'Lithium-Ion'
                        Enom = mdl.get_property_value(mdl.prop(item_handle, "V_nom"))  # Nominal voltage [V]
                        Qfull = mdl.get_property_value(mdl.prop(item_handle, "Q_nom"))  # Capacity [Ah]
                        Ke_full = 116.0  # Full charge voltage [%]
                        Kdisc_I = 20.0  # Nominal discharge current [%]
                        Rseries = 1e-6  # Internal resistance [Ohms]
                        Kq_nom = 93.5  # Capacity at nominal voltage [%]
                        Ke_exp = 103  # Voltage at exponential zone [%]
                        Kq_exp = 85.0  # Capacity at exponential zone [%]
                        
                        
                        x_vector, y_vector = battery_characteristic_curve(battery_type, Enom, Qfull, Ke_full, Kdisc_I, Rseries, Kq_nom, Ke_exp, Kq_exp, for_plot=False)
                        
                        
                        mdl.set_property_value(mdl.prop(item_handle, "x_vector"), x_vector)
                        mdl.set_property_value(mdl.prop(item_handle, "y_vector"), y_vector)
                    ENDCODE
                }
            }
            [
                position = 8248, 8192
                size = 128, 56
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "hours inherit"
                in_terminal_labels = "[(\'hours\', False)]"
                in_terminal_properties = "int hours;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "mode inherit"
                out_terminal_labels = "[(\'mode\', False)]"
                out_terminal_properties = "int mode;"
                output_fnc = "/*Begin code section*/
if(hours>7 && hours<23)
    mode = 1; //discharge battery
else if(hours>=0 &&  hours <= 7)
    mode = 2; //charge battery
else
    mode = 0;
/*End code section*/"
            }
            [
                position = 7952, 8352
                size = 48, 48
            ]

            component gen_c_function "C function2" {
                global_variables = "int state;int old_state;int new_state;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "soc inherit;mode inherit"
                in_terminal_labels = "[(\'soc\', True), (\'mode\', True)]"
                in_terminal_properties = "real soc;int mode;"
                init_fnc = "/*Begin code section*/
state = 0;
old_state = 0;
new_state = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', False)]"
                out_terminal_properties = "int out;"
                output_fnc = "/*Begin code section*/
switch(state) {
    case 0 : // NOT Working
        out = 0;
        break;
    case 1 : // Discharge
        out = 1;
        break;
    case 2 : // Charge
        out = -1;
        break;
}
/*End code section*/"
                update_fnc = "/*Begin code section*/
old_state = state;

switch(old_state) {
    case 0 : // NOT Working
        if(mode==1 && soc>=10)
            new_state = 1;
        else if(mode==2 && soc <= 95)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 1 : // Discharge
        if(mode==0 || soc<10)
            new_state = 0;
        else if(mode==2 && soc <= 95)
            new_state = 2;
        else
            new_state = old_state;
        break;
    case 2 : // Charge
        if(mode==0 || soc>95)
            new_state = 0;
        else if(mode==1 && soc>=10)
            new_state = 1;
        else
            new_state = old_state;
        break;
}

state = new_state;
/*End code section*/"
            }
            [
                position = 8528, 8200
                size = 80, 80
            ]

            component gen_product Product1 {
                signs = "*/"
            }
            [
                position = 8048, 8192
            ]

            component src_scada_input "Battery power" {
                def_value = "P*1000.0"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7752, 8192
            ]

            component gen_probe mode {
            }
            [
                position = 8736, 8200
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 7824, 8352
            ]

            component gen_product Product3 {
                signs = "**"
            }
            [
                position = 8232, 8072
            ]

            component gen_rel_op "Relational operator1" {
            }
            [
                position = 8080, 7968
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
            }
            [
                position = 7864, 7960
            ]

            port time {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7744, 8352
            ]

            port P {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8736, 8072
            ]

            junction Junction1 sp
            [
                position = 8624, 8200
            ]

            junction Junction3 sp
            [
                position = 8384, 8184
            ]

            junction Junction4 sp
            [
                position = 7960, 8184
            ]

            junction Junction5 sp
            [
                position = 7912, 8128
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Only charching will be detected by house</p></body></html> ENDCOMMENT 
            [
                position = 8088, 7936
            ]

            connect "Bus Split1.in" time as Connection1068
            connect Junction1 mode.in as Connection1050
            connect "C function2.out" Junction1 as Connection1049
            [
                breakpoints = 8608, 8200
            ]
            connect Junction3 "C function2.soc" as Connection1074
            connect "Bus Split1.out1" "C function3.hours" as Connection1069
            connect Termination2.in "Bus Split1.out2" as Connection1071
            connect Product2.in1 "Battery power.out" as Connection1047
            connect "SOC Model.SOC" Junction3 as Connection1073
            connect Termination1.in "Bus Split1.out" as Connection1070
            connect SOC.in Junction3 as Connection1075
            connect "SOC Model.V" Product1.in1 as Connection1067
            [
                breakpoints = 8328, 8256; 8008, 8256
            ]
            connect "C function3.mode" "C function2.mode" as Connection1072
            connect "SOC Model.I" Product1.out as Connection1065
            connect Product1.in Junction4 as Connection1077
            connect Junction4 Product2.out as Connection1078
            [
                breakpoints = 7936, 8184
            ]
            connect Product3.in1 Junction4 as Connection1079
            connect Product3.out P as Connection1080
            connect Constant1.out "Relational operator1.in" as Connection1081
            connect Product2.in Junction5 as Connection1082
            [
                breakpoints = 7824, 8176
            ]
            connect Junction5 Junction1 as Connection1083
            connect "Relational operator1.in1" Junction5 as Connection1084
            connect Product3.in "Relational operator1.out" as Connection1085
            [
                breakpoints = 8152, 8064; 8152, 7968
            ]

            mask {
                description = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"><html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:\'Consolas\'; font-size:10pt; font-weight:400; font-style:normal;\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"

                P {
                    label = "Nominal Power"
                    widget = edit
                    type = generic
                    default_value = "5"
                    unit = "kW"
                }

                E {
                    label = "Capacity"
                    widget = edit
                    type = generic
                    default_value = "20"
                    unit = "kWh"
                }

                init_soc {
                    label = "Initial State of Charge"
                    widget = edit
                    type = generic
                    default_value = "100"
                    unit = "%"
                }

                Ts {
                    label = "execution_rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                }

                V {
                    label = "Nominal Voltage"
                    widget = edit
                    type = generic
                    default_value = "500"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images//ev_charger.PNG")
                ENDCODE
            }
        }
        [
            position = 6896, 7928
            size = 88, 88
        ]

        component gen_probe P_ev {
        }
        [
            position = 7992, 6840
            rotation = left
        ]

        component gen_probe P_battery {
        }
        [
            position = 7888, 6840
            rotation = left
        ]

        component gen_probe P_uncontrollable {
        }
        [
            position = 7744, 6840
            rotation = left
        ]

        component gen_probe P_dishwasher {
        }
        [
            position = 7616, 6840
            rotation = left
        ]

        component Subsystem "Pseudo Random Generator" {
            layout = dynamic
            component src_scada_input Seed {
                def_value = "3"
                execution_rate = "Ts"
                unit = ""
            }
            [
                position = 7904, 8192
            ]

            component gen_c_function pseudo_rand_239 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (17*X_old+239) % 239;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8192
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_197 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (23*X_old+197) % 197;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8288
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_241 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (13*X_old+241) % 241;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8384
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_271 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (11*X_old+271) % 271;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8488
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_83 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (29*X_old+83) % 83;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8584
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_389 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (43*X_old+389) % 389;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8680
                size = 48, 64
            ]

            component gen_c_function pseudo_rand_229 {
                global_variables = "int X_old;int z;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "X0 inherit"
                in_terminal_labels = "[(\'X0\', False)]"
                in_terminal_properties = "int X0;"
                init_fnc = "/*Begin code section*/
X_old=X0;
z=0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "X inherit"
                out_terminal_labels = "[(\'X\', False)]"
                out_terminal_properties = "int X;"
                output_fnc = "/*Begin code section*/
X = (31*X_old+229) % 229;

X_old = X;
/*End code section*/"
            }
            [
                position = 8240, 8776
                size = 48, 64
            ]

            component gen_bus_join "Bus Join1" {
                inputs = "7"
            }
            [
                position = 8472, 8456
            ]

            port random_vector {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8600, 8456
            ]

            junction Junction1 sp
            [
                position = 8096, 8192
            ]

            junction Junction2 sp
            [
                position = 8096, 8288
            ]

            junction Junction3 sp
            [
                position = 8096, 8384
            ]

            junction Junction4 sp
            [
                position = 8096, 8488
            ]

            junction Junction5 sp
            [
                position = 8096, 8584
            ]

            junction Junction6 sp
            [
                position = 8096, 8680
            ]

            connect Seed.out Junction1 as Connection10
            connect Junction1 pseudo_rand_239.X0 as Connection11
            connect pseudo_rand_197.X0 Junction2 as Connection13
            connect Junction2 Junction1 as Connection14
            connect pseudo_rand_241.X0 Junction3 as Connection16
            connect Junction3 Junction2 as Connection17
            connect pseudo_rand_271.X0 Junction4 as Connection19
            connect Junction4 Junction3 as Connection20
            connect pseudo_rand_83.X0 Junction5 as Connection22
            connect Junction5 Junction4 as Connection23
            connect pseudo_rand_389.X0 Junction6 as Connection25
            connect Junction6 Junction5 as Connection26
            connect pseudo_rand_229.X0 Junction6 as Connection27
            connect "Bus Join1.in" pseudo_rand_239.X as Connection28
            [
                breakpoints = 8312, 8408; 8312, 8192
            ]
            connect "Bus Join1.in1" pseudo_rand_197.X as Connection29
            [
                breakpoints = 8296, 8424; 8296, 8288
            ]
            connect "Bus Join1.in2" pseudo_rand_241.X as Connection30
            [
                breakpoints = 8280, 8440; 8280, 8384
            ]
            connect "Bus Join1.in3" pseudo_rand_271.X as Connection31
            connect "Bus Join1.in4" pseudo_rand_83.X as Connection32
            [
                breakpoints = 8296, 8472; 8296, 8584
            ]
            connect pseudo_rand_389.X "Bus Join1.in5" as Connection33
            [
                breakpoints = 8312, 8680; 8312, 8488
            ]
            connect pseudo_rand_229.X "Bus Join1.in6" as Connection34
            [
                breakpoints = 8328, 8776; 8328, 8504
            ]
            connect "Bus Join1.out" random_vector as Connection35
        }
        [
            position = 6264, 7280
            size = 88, 88
        ]

        tag Goto3 {
            value = "global_time"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 6408, 6920
            size = 73, 20
        ]

        tag Goto4 {
            value = "temperature"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 6408, 7040
            size = 73, 20
        ]

        tag Goto5 {
            value = "irradiation"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 6408, 7160
            size = 73, 20
        ]

        tag From5 {
            value = "irradiation"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 6960
        ]

        tag From6 {
            value = "temperature"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 6912
        ]

        tag From11 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6152, 7064
        ]

        tag From12 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6152, 7184
        ]

        tag From13 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7408
        ]

        tag From14 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7536
        ]

        tag From18 {
            value = "temperature"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7056
        ]

        tag Goto6 {
            value = "inside_temperature"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 7160, 7080
            size = 73, 20
        ]

        tag From19 {
            value = "inside_temperature"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7192
        ]

        tag From20 {
            value = "inside_temperature"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7312
        ]

        tag From21 {
            value = "random"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7656
        ]

        tag From1 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6752, 7808
        ]

        tag From22 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6752, 7928
        ]

        tag Goto7 {
            value = "random"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 6400, 7280
            size = 73, 20
        ]

        tag From23 {
            value = "global_time"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7704
        ]

        tag From24 {
            value = "random"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6152, 7136
        ]

        tag From25 {
            value = "random"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6152, 7016
        ]

        tag From26 {
            value = "random"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7456
        ]

        tag From27 {
            value = "random"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 6760, 7584
        ]

        junction Junction2 sp
        [
            position = 6344, 7160
        ]

        junction Junction4 sp
        [
            position = 7232, 7192
        ]

        junction Junction5 sp
        [
            position = 7104, 7032
        ]

        junction Junction6 sp
        [
            position = 7024, 6936
        ]

        junction Junction7 sp
        [
            position = 7328, 7208
        ]

        junction Junction8 sp
        [
            position = 7448, 7224
        ]

        junction Junction9 sp
        [
            position = 6344, 7040
        ]

        junction Junction10 sp
        [
            position = 7616, 7240
        ]

        junction Junction11 sp
        [
            position = 7744, 7256
        ]

        junction Junction12 sp
        [
            position = 7888, 7272
        ]

        junction Junction13 sp
        [
            position = 7992, 7288
        ]

        junction Junction14 sp
        [
            position = 7616, 7240
        ]

        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:16pt;">Enviroment</span></p></body></html> ENDCOMMENT 
        [
            position = 6208, 6744
        ]

        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:16pt;">House</span></p></body></html> ENDCOMMENT 
        [
            position = 6856, 6744
        ]

        connect From12 "Global Irradiation.t" as Connection243
        connect "Global Temperature.t" From11 as Connection244
        connect "Washing Machine.t" From13 as Connection245
        connect "Global Irradiation.irradiation" Junction2 as Connection260
        connect Junction2 Goto5 as Connection261
        connect Irradiation.in Junction2 as Connection262
        connect PV_panel.I From5 as Connection263
        connect From6 PV_panel.T as Connection264
        connect From18 Heat_Pump.Tamb as Connection265
        connect P_boiler.in Junction4 as Connection273
        connect Junction4 Boiler.P as Connection274
        connect Sum1.in2 Junction4 as Connection275
        connect P_heat_pump.in Junction5 as Connection276
        connect Junction5 Heat_Pump.P as Connection277
        connect Sum1.in1 Junction5 as Connection278
        connect PV_panel.P Junction6 as Connection279
        connect Junction6 P_PV.in as Connection280
        [
            breakpoints = 7024, 6936; 7024, 6880
        ]
        connect Sum1.in Junction6 as Connection281
        connect P_refrigerator.in Junction7 as Connection282
        connect Junction7 Refrigerator.P as Connection283
        [
            breakpoints = 7024, 7208; 7024, 7312
        ]
        connect Sum1.in3 Junction7 as Connection284
        connect P_washing_machine.in Junction8 as Connection285
        connect Junction8 "Washing Machine.P" as Connection286
        [
            breakpoints = 7104, 7224; 7104, 7432
        ]
        connect Sum1.in4 Junction8 as Connection287
        connect P_grid_net.in Sum1.out as Connection288
        connect Goto3 "Global Time.time" as Connection289
        connect Goto4 Junction9 as Connection291
        connect Junction9 "Global Temperature.temperature" as Connection292
        connect Temperature.in Junction9 as Connection293
        connect Goto6 Heat_Pump.T_room as Connection295
        connect From20 Refrigerator.Tamb as Connection296
        connect Boiler.Tamb From19 as Connection297
        connect From1 Battery.time as Connection302
        connect From22 EV.time as Connection303
        connect Junction10 Sum1.in5 as Connection307
        connect Uncontrollable.P Junction11 as Connection309
        [
            breakpoints = 7176, 7680; 7176, 7256
        ]
        connect Junction11 Sum1.in6 as Connection310
        connect P_uncontrollable.in Junction11 as Connection311
        connect Battery.P Junction12 as Connection312
        [
            breakpoints = 7208, 7808; 7208, 7272
        ]
        connect Junction12 Sum1.in7 as Connection313
        connect P_battery.in Junction12 as Connection314
        connect EV.P Junction13 as Connection315
        [
            breakpoints = 7240, 7928; 7240, 7288
        ]
        connect Junction13 Sum1.in8 as Connection316
        connect P_ev.in Junction13 as Connection317
        connect Goto7 "Pseudo Random Generator.random_vector" as Connection318
        connect From21 Uncontrollable.random as Connection319
        connect From23 Uncontrollable.time as Connection320
        connect From24 "Global Irradiation.random" as Connection321
        connect From25 "Global Temperature.random" as Connection322
        connect From26 "Washing Machine.random" as Connection323
        connect From14 "Dish Washer.t" as Connection324
        connect From27 "Dish Washer.random" as Connection325
        connect P_dishwasher.in Junction14 as Connection326
        connect Junction14 Junction10 as Connection327
        connect "Dish Washer.P" Junction14 as Connection328
        [
            breakpoints = 7144, 7560; 7144, 7240; 7616, 7240
        ]
    }

    logically_deleted {
        "Dish Washer.LOADED"
        "Dish Washer.Termination1"
        "Dish Washer.Connection310"
        "Washing Machine.Termination1"
        "Washing Machine.LOADED"
        "Washing Machine.Connection310"
    }

    default {
        gen_2D_lookup_table {
            in_vec_x = "np.arange(0,3)"
            in_vec_y = "np.arange(-1,1)"
            out_vec_f_xy = "[[1,4],[2,5],[3,6]]"
            table_impl = "Equidistant"
            ext_mode = "Clip"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_sign {
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        lut_1d {
            in_vec_x = "np.arange(-5,6)"
            out_vec_f_x = "np.arange(-5,6)**2"
            table_impl = "Equidistant"
            ext_mode = "Clip"
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        "core/Counter" {
            ext_reset = "level"
            init_val = "0"
            state_type = "real"
            execution_rate = "inherit"
        }

        "core/Hysteresis Function" {
            up_thr = "1"
            low_thr = "-1"
            high_out = "1"
            low_out = "0"
            init_state = "low"
            execution_rate = "100e-6"
        }

        "core/Edge Detection" {
            edge = "both"
            execution_rate = "inherit"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-6
        
        # Irradiation per year
        irradiation_pu =[0.572196, 0.5778289999999999, 0.558823, 0.569305, 0.19948, 0.800453, 0.613515, 0.589032, 0.559327, 0.542787, 0.641359, 0.700823, 0.5856939999999999, 0.49630799999999997, 0.153884, 0.550701, 0.817381, 0.598683, 0.615208, 0.636389, 0.735417, 0.633838, 0.6135280000000001, 0.62821, 0.628837, 0.638414, 0.640873, 0.649813, 0.695852, 0.669748, 0.931346, 0.672099, 0.545188, 0.8821079999999999, 0.973741, 0.741749, 0.81003, 0.704855, 0.709851, 0.873228, 0.720031, 0.718116, 0.940046, 0.630635, 0.122115, 0.869888, 0.9167069999999999, 0.8486480000000001, 0.771269, 0.780927, 0.754417, 0.6597580000000001, 0.786378, 0.868183, 0.7814650000000001, 0.8839170000000001, 0.973012, 1.10001, 0.7877949999999999, 0.847831, 0.974186, 0.8326399999999999, 0.809944, 0.973024, 0.693917, 0.853428, 1.1752, 0.860366, 0.798894, 0.846923, 0.972424, 1.01532, 0.8945789999999999, 0.904732, 0.8928250000000001, 0.883344, 0.8941180000000001, 1.0428199999999999, 0.5226770000000001, 1.04213, 0.909235, 0.9701559999999999, 0.908679, 0.92357, 0.993085, 1.00844, 1.07403, 0.946588, 0.9492200000000001, 0.954232, 1.01972, 1.17452, 0.9645220000000001, 1.1511300000000002, 1.1555, 1.00043, 0.988184, 1.04816, 1.2003199999999998, 0.99673, 1.09686, 1.1515199999999999, 0.99187, 0.9906029999999999, 1.11573, 1.0358, 0.999506, 1.00397, 1.20952, 1.00918, 1.2194500000000001, 1.21901, 0.991878, 0.9868859999999999, 0.9857480000000001, 1.0025, 1.04673, 1.03348, 1.05793, 1.17324, 1.03142, 1.01748, 1.11993, 1.01508, 1.0170599999999999, 1.03159, 1.14594, 1.08227, 1.11652, 1.29665, 1.02207, 1.0236, 1.02438, 1.02836, 1.32471, 1.22103, 1.31843, 1.06476, 1.24452, 1.31357, 1.1213499999999998, 1.02341, 1.12601, 1.19175, 1.17003, 1.14528, 1.33623, 1.3054100000000002, 1.20225, 1.31098, 1.24764, 1.04632, 1.06905, 1.04298, 1.02966, 1.01672, 1.29495, 1.0438699999999999, 1.0387899999999999, 1.06349, 1.14049, 1.1793099999999999, 1.0341099999999999, 1.11243, 1.27614, 1.23385, 1.1304400000000001, 1.01823, 1.00697, 1.02521, 1.03973, 1.02286, 1.0594100000000002, 1.05009, 1.04049, 1.09503, 1.04305, 1.0411400000000002, 1.0850899999999999, 1.03373, 1.01682, 1.01779, 1.0263499999999999, 1.05521, 1.0245799999999998, 1.02214, 1.0124, 1.1475, 1.16002, 1.15418, 0.985214, 1.02883, 1.10844, 1.1174600000000001, 1.01023, 0.981347, 1.01421, 0.972333, 1.0136699999999998, 1.1424100000000001, 1.00061, 0.8032849999999999, 0.98417, 0.979361, 1.12796, 0.9785940000000001, 0.952597, 0.9689800000000001, 0.9770800000000001, 0.951759, 0.9561409999999999, 0.931662, 0.977629, 1.1305699999999999, 0.951206, 0.983692, 1.0243699999999998, 0.989939, 0.978097, 0.926431, 0.841742, 0.9023450000000001, 0.901011, 1.1893699999999998, 0.928609, 1.02174, 0.940169, 0.983734, 0.9413590000000001, 0.9279769999999999, 1.09144, 0.9655710000000001, 0.948279, 1.04624, 0.941387, 1.00885, 1.03865, 1.00004, 0.989827, 1.03018, 0.992911, 1.1658, 0.980989, 1.01063, 0.913489, 0.959573, 0.963998, 0.9244220000000001, 0.902836, 0.899751, 0.904798, 0.926563, 0.9100090000000001, 0.915866, 0.924606, 0.932406, 0.925785, 0.893434, 0.8746860000000001, 0.8944880000000001, 0.9312910000000001, 0.921708, 0.882619, 0.851688, 0.851719, 0.926943, 0.9792219999999999, 0.835611, 0.8538049999999999, 0.854694, 0.8411369999999999, 0.89112, 0.981996, 0.971445, 1.06884, 0.9526749999999999, 0.818755, 0.804432, 1.0420699999999998, 0.6196699999999999, 0.8016639999999999, 0.796399, 0.7996939999999999, 0.8176680000000001, 0.775068, 0.792976, 0.790311, 0.813682, 1.0239099999999999, 0.781236, 0.7470209999999999, 0.760848, 0.757875, 0.962514, 0.7169260000000001, 0.716058, 0.709866, 0.755554, 0.702816, 0.730981, 0.708174, 0.698917, 0.693499, 0.70437, 0.678019, 0.6688339999999999, 0.702528, 0.625994, 0.6528630000000001, 0.6633709999999999, 0.65944, 0.6686570000000001, 0.671462, 0.664066, 0.663274, 0.6650499999999999, 0.6791090000000001, 0.629428, 0.618342, 0.649466, 0.624463, 0.614904, 0.666033, 0.682254, 0.6592, 0.619231, 0.723567, 0.579708, 0.60214, 0.607081, 0.743872, 0.638857, 0.50543, 0.5852820000000001, 0.565371, 0.589032, 0.575982, 0.754352, 0.30463999999999997, 0.30062099999999997, 0.507974, 0.5476749999999999, 0.558476, 0.758846, 0.5417029999999999, 0.647499, 0.544677, 0.5525249999999999, 0.54715, 0.5401900000000001, 0.6417569999999999, 0.6497050000000001, 0.545965, 0.649836, 0.640019, 0.539005, 0.579217, 0.685278, 0.633375, 0.561789, 0.612663, 0.664587, 0.559784, 0.560361, 0.7399260000000001]
        irradiation_day_1 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.43236, 25.0097, 58.686, 102.221, 150.531, 203.673, 255.415, 309.095, 362.423, 412.939, 465.437, 516.596, 570.994, 619.394, 667.707, 712.616, 756.692, 798.867, 837.057, 873.895, 899.839, 930.875, 955.97, 979.584, 990.672, 1013.28, 1019.94, 1015.89, 1018.87, 1043.05, 1039.5, 1032.57, 1017.74, 998.871, 984.439, 961.906, 939.503, 913.462, 885.573, 851.202, 815.77, 779.039, 737.196, 697.215, 643.542, 603.935, 556.85, 506.416, 452.064, 400.47, 348.62, 297.857, 243.749, 191.494, 139.324, 94.2434, 53.7926, 11.8281, 1.02547, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        irradiation_day_2 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.09523, 26.3298, 61.1533, 106.196, 155.492, 206.82, 258.915, 313.032, 365.536, 419.514, 473.446, 523.058, 571.715, 620.765, 668.502, 713.875, 759.598, 803.698, 846.225, 883.919, 917.237, 943.475, 969.762, 989.153, 1011.08, 1027.09, 1030.49, 1039.41, 1043.57, 1045.97, 1039.63, 1028.0, 1017.35, 1005.73, 987.574, 970.39, 952.096, 916.901, 894.547, 861.212, 821.093, 786.268, 744.865, 704.348, 660.998, 617.698, 563.73, 494.391, 470.941, 398.412, 357.718, 172.256, 187.149, 193.148, 144.494, 86.3575, 51.787, 5.77843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        
        # Temperatures
        temperature_through_year = [5.99166666666667, 4.16666666666667, 6.0875, 7.17916666666666, 9.32916666666667, 5.65, 4.40416666666667, 3.88333333333333, 5.02916666666667, 4.0, 4.30416666666667, 2.60833333333333, 1.65416666666667, -1.17916666666667, 1.02083333333333, 6.09166666666667, 1.85416666666667, 4.27083333333333, 4.01666666666667, 3.05416666666667, 2.725, 6.34166666666667, 5.4875, 5.5875, 7.21666666666667, 5.64166666666667, 5.78333333333333, 6.03333333333333, 5.97083333333333, 6.65416666666667, 6.55, 2.65, 1.34583333333333, 0.416666666666667, 0.35, -0.429166666666667, -1.69583333333333, -0.733333333333333, -0.695454545454545, -0.0583333333333333, -0.0791666666666666, 0.858333333333333, 0.0791666666666666, -2.0, -2.09166666666667, -0.320833333333333, 4.78333333333333, 2.3375, -0.254166666666667, -0.320833333333333, -0.941666666666667, -1.89583333333333, -2.85833333333333, -3.025, -2.03333333333333, -5.975, -9.64166666666667, -9.6875, -8.33333333333333, -6.28333333333333, -4.46666666666667, -1.04583333333333, 3.675, 6.025, 4.525, 4.48333333333333, 5.65, 8.45, 8.14583333333333, 7.15416666666667, 8.16666666666667, 5.85416666666667, 6.97916666666667, 5.3, 6.78333333333333, 3.75, -1.13333333333333, -1.8125, -1.69166666666667, -0.533333333333333, -0.433333333333333, 3.07916666666667, 4.40833333333333, 7.20434782608696, 6.48695652173913, 5.425, 8.01666666666667, 5.25833333333333, 4.74166666666667, 3.2375, 4.6375, 6.86666666666667, 12.7416666666667, 10.85, 8.74166666666667, 9.1625, 12.775, 15.6782608695652, 14.7458333333333, 10.8083333333333, 10.9375, 13.9208333333333, 11.475, 12.3083333333333, 12.675, 12.1833333333333, 14.0833333333333, 16.2208333333333, 17.1875, 17.9833333333333, 18.7458333333333, 18.9416666666667, 16.6583333333333, 16.0, 17.0375, 11.5083333333333, 13.9875, 15.7958333333333, 17.4625, 11.5869565217391, 8.69166666666666, 10.3375, 12.2708333333333, 14.6739130434783, 17.6166666666667, 17.2541666666667, 16.6958333333333, 18.0833333333333, 16.35, 12.1666666666667, 13.9541666666667, 17.6375, 12.6625, 10.0041666666667, 10.3875, 10.4291666666667, 11.4416666666667, 14.3666666666667, 13.7125, 13.5, 15.3875, 16.3166666666667, 15.9833333333333, 17.3958333333333, 18.875, 20.2625, 21.0916666666667, 21.35, 18.775, 19.1304347826087, 18.3375, 17.4583333333333, 18.8666666666667, 19.8875, 19.4125, 19.7875, 20.3375, 19.3478260869565, 18.3333333333333, 20.2166666666667, 21.525, 19.2083333333333, 17.0666666666667, 12.8666666666667, 14.1739130434783, 16.5652173913043, 18.4291666666667, 18.6541666666667, 18.9217391304348, 19.9583333333333, 21.7875, 22.4333333333333, 15.2625, 15.25, 15.9958333333333, 17.0083333333333, 17.9958333333333, 18.8666666666667, 16.7166666666667, 18.225, 22.3583333333333, 22.2583333333333, 21.9416666666667, 19.7583333333333, 21.975, 17.5125, 16.3291666666667, 19.3, 20.5458333333333, 21.1083333333333, 19.2916666666667, 17.1, 18.3291666666667, 20.8125, 22.725, 21.25, 20.675, 19.675, 21.5875, 22.8916666666667, 21.95, 18.4666666666667, 18.8875, 20.0375, 22.725, 24.5541666666667, 24.5541666666667, 24.2458333333333, 20.4416666666667, 22.7208333333333, 25.5166666666667, 26.5791666666667, 25.0916666666667, 23.4541666666667, 25.9833333333333, 26.6125, 26.6458333333333, 25.4666666666667, 25.025, 23.4041666666667, 21.375, 17.7333333333333, 18.65, 20.7333333333333, 20.4083333333333, 18.4166666666667, 19.8083333333333, 20.9, 20.8083333333333, 20.425, 22.0083333333333, 23.225, 23.0041666666667, 23.8333333333333, 22.0833333333333, 17.9458333333333, 13.5583333333333, 12.4625, 18.0208333333333, 20.4875, 19.3541666666667, 16.0458333333333, 13.6833333333333, 12.2708333333333, 12.9416666666667, 14.8666666666667, 17.1666666666667, 18.0333333333333, 18.3, 17.1125, 17.0208333333333, 18.1333333333333, 19.375, 20.15, 21.0416666666667, 19.2291666666667, 17.4916666666667, 17.2208333333333, 16.1458333333333, 18.875, 19.1125, 19.5666666666667, 19.8916666666667, 18.725, 14.075, 19.5166666666667, 10.3, 9.24583333333334, 10.1541666666667, 14.3708333333333, 16.225, 13.0208333333333, 13.4041666666667, 9.70416666666667, 8.65833333333333, 11.6666666666667, 12.3041666666667, 13.2916666666667, 15.2583333333333, 15.7125, 13.275, 14.375, 14.9166666666667, 13.675, 15.4416666666667, 15.0166666666667, 15.1875, 15.5541666666667, 14.1041666666667, 13.1333333333333, 13.0041666666667, 11.1, 11.7458333333333, 9.6625, 7.39166666666666, 8.78333333333333, 11.5541666666667, 11.7, 10.1375, 5.74166666666667, 2.092, 3.77916666666667, 4.47916666666667, 4.95416666666667, 7.86666666666667, 8.875, 9.37083333333334, 8.29166666666667, 8.775, 9.89583333333333, 9.22916666666667, 9.65416666666667, 8.525, 8.15833333333333, 10.3875, 10.0208333333333, 8.86666666666667, 6.54166666666667, 5.87916666666667, 4.1, 2.875, 0.00833333333333331, 0.25, -0.179166666666667, -0.4, 1.075, 0.925, 5.24583333333333, 1.675, 2.3, 2.37916666666667, 2.23333333333333, 2.70416666666667, 5.05833333333333, 5.74166666666667, 6.65833333333333, 10.7125, 8.02916666666667, 6.19166666666667, 8.44583333333333, 9.35416666666667, 5.72083333333333, 6.1375, 3.6, 1.2875, -1.14166666666667, -1.225, -2.025, -2.5125, -0.0125, 1.75833333333333, -0.666666666666667, 1.3125, 4.8125, 6.14166666666667, 9.675, 8.6125, 6.12916666666667, 0.0625, -0.85, -1.19583333333333, 0.525, 0.141666666666667, 2.06666666666667, 3.71666666666667]
        day_1_temp_pu = [1.1621423330887748, 1.285399853264857, 1.2501834189288334, 0.8451944240645635, 0.8628026412325753, 0.7043286867204696, 0.5282465150403522, 0.7571533382245048, 1.1093176815847396, 1.0741012472487161, 1.021276595744681, 1.0564930300807045, 0.950843727072634, 0.9332355099046222, 0.8980190755685987, 0.9332355099046222, 1.021276595744681, 0.950843727072634, 1.021276595744681, 1.0741012472487161, 1.091709464416728, 1.1621423330887748, 1.1445341159207632, 1.1621423330887748]
        day_2_temp_pu = [1.022503823465152, 1.1745684946471489, 1.2532226349136992, 1.2951715097225258, 1.2846842910203193, 1.2270045881581824, 1.1326196198383223, 1.0487218702206689, 1.0434782608695654, 1.0644526982739788, 0.9438496831986019, 0.886169980336465, 0.8337338868254317, 0.807515840069915, 0.7917850120166049, 0.8442211055276384, 0.823246668123225, 0.8651955429320517, 0.8756827616342584, 0.9123880270919817, 0.9386060738474985, 0.9386060738474985, 0.9700677299541186, 1.022503823465152]
        day_3_temp_pu = [1.0731117824773413, 1.0151057401812689, 0.9716012084592146, 0.9425981873111783, 0.8942598187311178, 0.8700906344410876, 0.8700906344410876, 0.8362537764350454, 0.8217522658610272, 0.8024169184290031, 0.8410876132930513, 0.8314199395770392, 0.8652567975830815, 0.8990936555891239, 0.9425981873111783, 1.0247734138972808, 1.1891238670694866, 1.2229607250755288, 1.2519637462235649, 1.2664652567975831, 1.2277945619335346, 1.1891238670694866, 1.0972809667673715, 1.0537764350453172]
        
        # Uncontrollable Loads - days:
        Monday = [3.2759417000000335, 2.9304209444444664, 1.9675626888888889, 2.013039477777778, 2.0002097111111223, 2.0416272222222336, 2.0693935555555667, 1.9644951333333334, 2.1214980888889, 2.0013878000000003, 2.0769550555555667, 2.118436600000011, 2.022206977777789, 1.9221957000000112, 2.0247219000000114, 2.107074622222233, 2.130123844444445, 1.9720484666666669, 2.103697377777789, 1.9385938222222223, 2.0361832444444556, 2.039056266666678, 1.9927785444444557, 2.0086242000000003, 1.9969290222222222, 2.4894714888889, 3.7295495444444446, 3.7704951555555777, 5.749621855555566, 6.1370982888888665, 418.50200931111107, 474.26992000000223, 477.13559648889, 478.0554378555589, 471.3316428000022, 466.91890092222445, 475.11613694444554, 468.3143284333345, 470.04361963333446, 440.1730480555567, 7.470793833333322, 2.0411490555555667, 2.080581311111122, 2.0010167111111223, 1.9373205666666777, 2.1201026666666776, 1.9781316777777889, 2.002832333333344, 2.0628401222222332, 2.0756094333333444, 1.9564862111111223, 2.0361583444444555, 2.280535677777789, 2.213424077777789, 2.060484400000011, 2.155879800000011, 2.1068800888889, 2.0780270888889, 2.4836412444444558, 53.07899175555533, 471.56956455555667, 479.8750830444467, 473.50597753333557, 477.0369367333355, 470.47437269999773, 470.9211113555533, 469.42718541110776, 471.9859512555544, 470.3806973999978, 469.0488870888867, 471.0696672444422, 469.3002890444433, 708.4259384555555, 1243.091505688889, 465.2346562000011, 462.34388855555665, 465.38808535555114, 462.70259212222004, 470.8434795999989, 469.7912927777767, 687.0639138333322, 468.47219426666555, 469.31637462222, 464.4685030111089, 456.94080807777664, 457.5562623888878, 457.03960229999666, 460.1985502444433, 520.4054522, 338.2231832222233, 2.0344588222222333, 39.87208939999989, 119.07824854444556, 119.49515785555667, 20.0389322, 1.7405090444444444]
        Tuesday = [1.9236691000000001, 1.7143027222222222, 1.7381480555555555, 1.7759640444444442, 1.8851804777777779, 1.7176273666666666, 1.7605783444444445, 1.8232832222222222, 1.9395292222222222, 1.9252486222222225, 1.943449377777778, 1.8749260888888888, 1.9725941777777778, 2.0133638888888887, 2.019126433333333, 2.001349911111111, 1.9237896222222224, 1.9305599999999998, 1.7837660666666666, 1.8149829555555557, 1.8940317333333334, 1.7515470222222222, 1.8325028444444444, 1.8005078222222222, 1.8724649333333334, 1.8507036, 1.9103549333333445, 1.8690016222222223, 1.8494096444444446, 1.7870053555555556, 1.8404699111111111, 1.7478835000000001, 48.842649511111105, 299.7294033555556, 121.98637764444445, 122.00140228888888, 122.13858054444445, 122.2437670111111, 121.97586445555554, 121.99527528888889, 121.90726158888889, 121.97588375555554, 121.63895855555445, 140.86820734444333, 174.01648365555553, 29.232258511111223, 2.974906311111122, 2.6267193111111222, 2.4847698222222334, 2.5165594000000113, 2.5834335111111226, 2.6222967000000112, 2.6986265555555664, 2.5673723333333447, 2.6687116333333445, 2.521762977777789, 2.6311650666666777, 2.5105051444444557, 2.4828667222222336, 2.6808008222222335, 2.5704640444444555, 2.5054451777777884, 2.652281377777789, 2.6482548666666776, 2.730801066666678, 2.701889555555567, 2.718325911111122, 2.6643429555555667, 2.7551557111111222, 2.4953210888889, 2.2024237444444554, 2.3329414222222336, 1201.4321555777778, 1247.1648054222221, 573.4773270444434, 385.8169979666655, 380.87262672222215, 380.88150608888895, 405.49476856666445, 512.4403408444444, 496.01656958889004, 477.19077973333555, 479.11594591111333, 480.30067594444887, 471.08995741111556, 466.31860472222553, 473.2075014888922, 473.1905571444477, 483.99468118889223, 469.6138946000044, 292.4199050333355, 1.9581422444444445, 2.0209872666666775, 2.040736511111122, 1.9197673888888889, 2.0515481888889]
        Wednesday = [1.991134600000011, 2.0364210555555555, 2.0066491555555555, 1.9251511333333333, 1.8885256, 1.9109803333333335, 2.0705647333333443, 2.097676977777789, 2.036578311111111, 2.0032998444444554, 2.0129499333333443, 1.9195749555555557, 2.0612292444444558, 2.016516577777778, 2.0418606666666776, 2.0149019555555556, 2.0833340444444555, 1.8447866555555557, 1.9756146666666667, 2.4607663777777886, 2.365761666666678, 2.037097955555567, 2.0861721333333443, 2.254029800000011, 2.207948711111122, 2.1134971111111223, 558.9995158, 689.0337371222245, 687.9207738000023, 694.8255912222199, 688.8714052999978, 559.7069173999989, 572.4055113777778, 675.4408159111111, 604.2779661333367, 607.1483274111122, 606.1348504333345, 603.7042743333345, 600.7446623333333, 475.6010531666644, 450.82841387777887, 415.2211521555544, 2.399397377777789, 2.203413366666678, 2.180217311111122, 2.142933711111122, 2.144772144444455, 2.1484147222222334, 2.027637577777789, 2.0680203222222335, 2.174754900000011, 2.020135500000011, 2.2585314555555667, 2.077453077777789, 2.165636777777789, 2.1298416333333443, 2.165417311111122, 2.0732800333333445, 1.9817495444444555, 2.063174577777789, 2.1311784666666775, 1.9643143888889, 2.184837555555567, 2.2161889111111224, 2.146375866666678, 1.886519811111111, 2.1609068666666778, 2.1292885444444556, 2.1229238000000112, 2.0897898222222335, 2.077475877777789, 2.0674574222222333, 2.0846111555555664, 2.119048622222233, 2.0897299888889003, 2.047693711111122, 2.178238144444456, 2.109944866666678, 2.123503200000011, 2.223580777777789, 2.186770977777789, 2.2010494777777887, 2.1477256888888996, 2.1559638555555667, 2.0396557555555668, 2.0090498555555665, 2.1141242111111223, 2.014189500000011, 2.133683122222233, 7.403589466666678, 568.5141143555555, 670.6545159444432, 660.0507586222222, 613.987384022219, 508.70871548888886, 48.340011044445106]
        Thursday = [47.36374185555644, 47.07355256666756, 47.00365027777867, 47.25850297777867, 46.94054528888978, 57.55941622222134, 61.19287809999911, 61.222844144443556, 61.17079751111022, 61.10855687777689, 61.20316123333245, 52.409459022223224, 47.03771705555644, 47.05898102222311, 47.03074368888978, 47.14011002222311, 47.023835177778665, 47.21709688888977, 47.10850577777867, 47.10052177777867, 47.14080602222312, 47.020014011112, 47.02480936666756, 47.10619723333423, 46.98484746666755, 47.018765211112004, 47.10463320000089, 46.918164433334226, 47.094949822223114, 346.0444580777778, 47.24054382222311, 47.029064088889776, 46.79556586666755, 39.76877535555544, 2.1614429888889, 1.9368440444444446, 2.0499599333333447, 498.28954118888885, 1.8720965666666667, 2.042187400000011, 1.9558229333333443, 1.9129133555555666, 266.54305812222225, 195.6403475777778, 1.9037311666666779, 2.591804277777789, 2.1047431222222333, 2.1945414111111226, 2.094387266666678, 29.831763133333332, 53.460996000000335, 49.74888832222233, 22.960341377777997, 2.128064266666678, 2.0442118000000113, 2.205120666666678, 2.3651424000000114, 2.2115603333333445, 2.0118007111111225, 2.102224000000011, 2.1470877000000113, 2.189381066666678, 2.2138725555555667, 2.8563009111111217, 3.408261488888922, 2.6490876000000223, 2.2651063444444555, 1.0842963666666645, 36.46937237777778, 66.79671776666655, 1083.2243532888901, 1079.0632189666665, 41.022834311111, 62.40778247777789, 137.25161867777888, 135.11220004444556, 136.7626570666678, 136.98684403333445, 148.26830682222334, 212.6917203111111, 434.5951172333334, 510.3742419000011, 504.0488494333311, 435.19215252222114, 500.0861135666645, 567.4309369777754, 606.5360290555523, 489.7308186666644, 336.1774425777778, 1.1260244444444445, 1.2540045333333334, 1.2002218000000002, 1.1332133777777778, 1.2073900333333334, 1.1138573333333333, 1.1862123]
        Friday = [1.220397377777778, 1.1688662444444444, 1.1371142222222221, 1.1465068444444446, 1.1229652222222222, 1.0873537555555521, 1.264093877777778, 1.2051999777777775, 1.3021313333333333, 1.0553317999999978, 1.2369032, 1.2487433444444445, 1.2393291888888889, 1.1442609222222222, 1.2372778, 1.2094414222222223, 1.2413391777777778, 1.1994022666666666, 1.067734844444441, 1.1414044666666667, 1.2277742666666667, 1.0888153111111079, 1.297264888888889, 1.1872910222222224, 1.1934633333333333, 1.2028774888888887, 1.6147719555555555, 1.921372811111111, 1.5252720444444445, 1.1721350222222222, 1.2967139, 1.3299526888888888, 1.3288620555555555, 1.2959916333333332, 1.3728503555555556, 1.4038168444444445, 1.2032872555555556, 1.3049106666666668, 1.358805688888889, 1.3382969111111112, 1.2728478666666665, 1.402120188888889, 1.2931062444444446, 1.2856399777777778, 1.1890330333333334, 1.3625194, 1.2347664555555555, 1.222613811111111, 1.360155511111111, 1.283859688888889, 1.2178094666666666, 1.226993922222222, 1.1732934333333334, 1.2774695888888887, 1.3223332888888888, 1.3266719999999999, 1.3310107111111114, 1.3256993333333333, 1.3917614666666664, 1.2554930222222223, 1.350213622222222, 1.276865288888889, 1.2513488444444445, 1.116763422222222, 1.3041325333333333, 1.119195088888889, 1.3625815, 1.2711767555555555, 1.6597782111111112, 2.0327261666666665, 1.8244504222222224, 1.923607, 1.8070485, 1.757686722222222, 2.121254866666667, 66.56437555555556, 419.14660228888886, 2034.4683598666668, 471.4689939000011, 419.71124416666777, 731.0584939444456, 417.37328852222, 417.3524790888867, 435.4100012777755, 495.41503764444224, 541.5344332777755, 536.2368174888867, 457.1737183222211, 417.6012796777799, 418.9546987555578, 182.32039211111112, 4.172664266666689, 3.8150975777778116, 3.3205369000000333, 2.993825555555578, 2.0145417555555554]
        Saturday = [1.8346305777777776, 1.8536328888888889, 1.9471028000000001, 1.9793172555555667, 1.997038366666667, 2.025034177777789, 1.9991472666666779, 1.7686554444444444, 1.8917876888889, 1.8961926999999998, 1.9694002666666777, 1.9440871444444445, 1.7825013777777778, 1.991362200000011, 1.863382111111111, 1.906136688888889, 1.9939704222222334, 1.9594397777777777, 1.8373546666666667, 1.8415733111111112, 1.9544904666666778, 1.927231388888889, 1.7701521, 1.8931582111111112, 2.0056656000000115, 1.9275813222222224, 1.8539742555555556, 2.5793483333333445, 373.71814960000006, 66.02434971111123, 52.98053392222244, 58.529605700001, 56.365950466666774, 41.063364044444, 2.0824399666666777, 1.9817558444444556, 1.9029015999999999, 1.8078436000000002, 12.414422411111111, 239.83091025555555, 464.5042740333333, 471.7627520888878, 1154.6797449222222, 607.0770169888867, 469.3233502777756, 468.79309957777554, 470.06531087777563, 1034.2635619666644, 1120.0948755222223, 148.69304870000113, 156.0652259111122, 100.342191122223, 3.8964787777777556, 3.9951586222222, 3.918529977777756, 3.9390042666666445, 3.9615976333333114, 3.9777003999999776, 3.9114692777777553, 4.0551462222222, 3.959878399999978, 3.9979306222222, 4.020506355555534, 3.981940588888867, 3.9637402222222, 3.9129339666666443, 3.9394878222222, 4.038698166666645, 3.9749502888888673, 3.380277844444444, 2.7783531333333444, 2.0732432222222332, 2.0344152666666666, 2.129845600000011, 2.1167430888889003, 1.9956306444444556, 2.0813696555555667, 1.9523060444444555, 2.120336277777789, 2.155794611111122, 2.1050851111111224, 2.0602979777777777, 2.122164266666678, 2.1515096666666778, 2.0741621222222335, 2.0433859666666776, 378.88960953333327, 712.2701688000012, 713.0469177222234, 711.7040369111122, 708.0240221888901, 705.3486822666656, 135.93173617777776, 1.6372846333333335, 1.903817511111111, 60.47329250000011]
        Sunday = [1.7872118000000112, 1.6945249999999998, 1.9570817222222334, 2.0327244444444554, 2.0328353444444556, 1.8750233555555555, 1.7901975666666665, 1.7051063555555557, 1.8657064666666665, 1.9134410888889, 1.7096603, 1.9894746, 1.856542711111111, 1.8399747888888889, 1.7734263222222222, 1.7512966222222224, 1.9471191333333446, 1.9108412666666779, 1.9981784000000111, 1.9785864222222331, 1.8123950444444443, 1.763006888888889, 1.876900911111111, 2.0018776444444444, 1.9316506333333334, 1.920486666666678, 2.030798800000011, 2.1023056444444554, 1.8797511333333332, 2.1066767555555557, 1.8293727333333332, 1.8859674, 1.7766185333333333, 1.8856404333333332, 1.9471693222222222, 1.840511311111111, 1.9263185555555553, 1.9533912666666666, 1.9019988, 1.9397915333333446, 1.8801107111111222, 1.5627189111111113, 1.4078813444444445, 1.7450125777777779, 1.595931322222222, 1.5693656444444446, 1.3240075222222223, 1.5966328888888888, 1.6984037555555558, 1.8372011333333333, 2.0447320444444554, 1.6883645999999999, 1.9697144666666775, 1.9723644777777778, 2.2580673333333445, 2.027343900000011, 1.8795007333333336, 1.999395788888889, 1.8076967555555554, 2.303087088888889, 361.27050741111105, 517.5914070777789, 140.0591666, 420.05652086666777, 446.6353404333333, 633.9539874444433, 418.61966058888777, 417.66688017777665, 419.08639873333226, 418.7091991111122, 418.40604371111, 417.6143898444444, 797.5695548999978, 898.5120711, 418.5397496555555, 419.00607533333334, 418.50294416666554, 417.98715351111116, 419.1884618555567, 418.84209659999885, 419.3611784777789, 419.16032381111216, 419.61371411111224, 419.6052852333322, 418.73039111111007, 419.6067249777778, 419.5357846777789, 420.09475178889, 420.1349299555567, 419.6311393666678, 507.0868895777767, 475.0053819444422, 1.315359588888889, 1.3714591333333332, 1.4728057666666667, 1.2761756333333334]
    ENDCODE
}
